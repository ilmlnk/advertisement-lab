[{"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\reportWebVitals.js":"1","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\index.js":"2","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\App.js":"3","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\UserManagement\\UserManagement.js":"4","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\TermsOfUse\\TermsOfUse.js":"5","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Start.js":"6","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\HowToBuy\\HowToBuy.js":"7","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\Instruction\\Instruction.js":"8","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\StartPageHeader\\StartPageHeader.js":"9","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\StartPageIntro\\StartPageIntro.js":"10","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ServiceReviews\\ServiceReviews.js":"11","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ReportUs\\ReportUs.js":"12","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\Registration.js":"13","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Login.js":"14","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\JoinOurTeam\\JoinOurTeam.js":"15","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\InstagramProfiles\\InstagramProfiles.js":"16","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Groups\\Groups.js":"17","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Faq\\Faq.js":"18","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ErrorPages\\NotFoundPage.js":"19","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CustomerSupport\\CustomerSupport.js":"20","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ComplianceManagement\\ComplianceManagement.js":"21","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\BudgetManagement\\BudgetManagement.js":"22","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Analytics\\Analytics.js":"23","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\footer\\Footer.js":"24","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Loader\\Loader.js":"25","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\modal\\ModalSuccessfulRegistration.js":"26","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\navigation\\Navigation.js":"27","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\PopupError\\PopupError.js":"28","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\OAuthButtonGroup.js":"29","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\PasswordField.js":"30","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\ProviderIcons.js":"31","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\Logo.js":"32","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\Feedback\\FeedbackCarousel.js":"33","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\DragAndDropFile.js":"34","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\UserFormHeader.js":"35","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\FailedAuthentication.js":"36","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\ForgotPasswordPage.js":"37","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ErrorPages\\ServerUnavailable.js":"38","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\PriceList\\PriceList.js":"39","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ChannelDashboard\\ChannelDashboard.js":"40","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Admin\\Components\\AdminMainContent.js":"41","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\HotOffers\\HotOffers.js":"42","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Advertisement\\Advertisement.js":"43","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\User\\User.js":"44","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Task\\TaskList.js":"45","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\User\\OnlineUserList.js":"46","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Advertisement\\AdvertisementList.js":"47","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ViberChannels\\ViberChannelsPage.js":"48","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\WhatsAppChannels\\WhatsAppChannelsPage.js":"49","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\TelegramChannels\\TelegramChannelsPage.js":"50","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Admin\\AdminPage.js":"51","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\RequireCredentialsPage.js":"52","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\Logo.js":"53","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\PasswordField.js":"54","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\OAuthButtonGroup.js":"55","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\ProviderIcons.js":"56","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\PublicationsPage.js":"57","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\Components\\PublicationSidebar.js":"58","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\ActionLog\\ActionLogList.js":"59","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Task\\Task.js":"60","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\ActionLog\\ActionLog.js":"61","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\Components\\PublicationFeed.js":"62","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Post\\Post.js":"63","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\CommandChatPage.js":"64","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\Components\\CommandChatContent.js":"65","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\CommandChat.js":"66"},{"size":375,"mtime":1684484857935,"results":"67","hashOfConfig":"68"},{"size":653,"mtime":1684484857929,"results":"69","hashOfConfig":"68"},{"size":6772,"mtime":1684484857336,"results":"70","hashOfConfig":"68"},{"size":190,"mtime":1684484857906,"results":"71","hashOfConfig":"68"},{"size":156,"mtime":1684484857902,"results":"72","hashOfConfig":"68"},{"size":933,"mtime":1684484857889,"results":"73","hashOfConfig":"68"},{"size":948,"mtime":1684484857859,"results":"74","hashOfConfig":"68"},{"size":1494,"mtime":1684484857863,"results":"75","hashOfConfig":"68"},{"size":8994,"mtime":1684484857877,"results":"76","hashOfConfig":"68"},{"size":1480,"mtime":1684484857884,"results":"77","hashOfConfig":"68"},{"size":181,"mtime":1684484857844,"results":"78","hashOfConfig":"68"},{"size":170,"mtime":1684484857811,"results":"79","hashOfConfig":"68"},{"size":10502,"mtime":1684484857804,"results":"80","hashOfConfig":"68"},{"size":5622,"mtime":1684484857774,"results":"81","hashOfConfig":"68"},{"size":10450,"mtime":1684484857735,"results":"82","hashOfConfig":"68"},{"size":170,"mtime":1684484857728,"results":"83","hashOfConfig":"68"},{"size":83,"mtime":1684484857720,"results":"84","hashOfConfig":"68"},{"size":118,"mtime":1684484857712,"results":"85","hashOfConfig":"68"},{"size":954,"mtime":1684484857700,"results":"86","hashOfConfig":"68"},{"size":1987,"mtime":1684484857674,"results":"87","hashOfConfig":"68"},{"size":148,"mtime":1684484857655,"results":"88","hashOfConfig":"68"},{"size":2340,"mtime":1684484857622,"results":"89","hashOfConfig":"68"},{"size":1634,"mtime":1684484857617,"results":"90","hashOfConfig":"68"},{"size":10917,"mtime":1684484857444,"results":"91","hashOfConfig":"68"},{"size":613,"mtime":1684484857436,"results":"92","hashOfConfig":"68"},{"size":722,"mtime":1684484857484,"results":"93","hashOfConfig":"68"},{"size":10123,"mtime":1684484857493,"results":"94","hashOfConfig":"68"},{"size":1290,"mtime":1684484857440,"results":"95","hashOfConfig":"68"},{"size":650,"mtime":1684484857755,"results":"96","hashOfConfig":"68"},{"size":1446,"mtime":1684484857760,"results":"97","hashOfConfig":"68"},{"size":2956,"mtime":1684484857763,"results":"98","hashOfConfig":"68"},{"size":1400,"mtime":1684484857751,"results":"99","hashOfConfig":"68"},{"size":4721,"mtime":1684484857849,"results":"100","hashOfConfig":"68"},{"size":5181,"mtime":1684484857793,"results":"101","hashOfConfig":"68"},{"size":1386,"mtime":1684484857799,"results":"102","hashOfConfig":"68"},{"size":426,"mtime":1684484857747,"results":"103","hashOfConfig":"68"},{"size":2663,"mtime":1684484857741,"results":"104","hashOfConfig":"68"},{"size":446,"mtime":1684484857705,"results":"105","hashOfConfig":"68"},{"size":1731,"mtime":1684484857870,"results":"106","hashOfConfig":"68"},{"size":12160,"mtime":1684484857632,"results":"107","hashOfConfig":"68"},{"size":2686,"mtime":1684484857611,"results":"108","hashOfConfig":"68"},{"size":3956,"mtime":1684484857854,"results":"109","hashOfConfig":"68"},{"size":3437,"mtime":1684484857363,"results":"110","hashOfConfig":"68"},{"size":1095,"mtime":1684484857433,"results":"111","hashOfConfig":"68"},{"size":1635,"mtime":1684484857425,"results":"112","hashOfConfig":"68"},{"size":2495,"mtime":1684484857429,"results":"113","hashOfConfig":"68"},{"size":2801,"mtime":1684484857366,"results":"114","hashOfConfig":"68"},{"size":158,"mtime":1684484857913,"results":"115","hashOfConfig":"68"},{"size":193,"mtime":1684484857920,"results":"116","hashOfConfig":"68"},{"size":113,"mtime":1684484857896,"results":"117","hashOfConfig":"68"},{"size":469,"mtime":1684484857605,"results":"118","hashOfConfig":"68"},{"size":4168,"mtime":1684484857840,"results":"119","hashOfConfig":"68"},{"size":1400,"mtime":1684484857824,"results":"120","hashOfConfig":"68"},{"size":1446,"mtime":1684484857835,"results":"121","hashOfConfig":"68"},{"size":650,"mtime":1684484857829,"results":"122","hashOfConfig":"68"},{"size":2956,"mtime":1684484857838,"results":"123","hashOfConfig":"68"},{"size":411,"mtime":1684484857788,"results":"124","hashOfConfig":"68"},{"size":1350,"mtime":1684484857784,"results":"125","hashOfConfig":"68"},{"size":2922,"mtime":1684484857352,"results":"126","hashOfConfig":"68"},{"size":4335,"mtime":1684484857420,"results":"127","hashOfConfig":"68"},{"size":428,"mtime":1684484857344,"results":"128","hashOfConfig":"68"},{"size":951,"mtime":1684484857780,"results":"129","hashOfConfig":"68"},{"size":4026,"mtime":1684484857415,"results":"130","hashOfConfig":"68"},{"size":310,"mtime":1684423154091,"results":"131","hashOfConfig":"68"},{"size":2068,"mtime":1684423397998,"results":"132","hashOfConfig":"68"},{"size":2068,"mtime":1684484857642,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13imqtl",{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"147"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"147"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"147"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"147"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"147"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"147"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"147"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"147"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"147"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"147"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\index.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\App.js",["367","368","369","370","371","372","373"],[],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport StartPage from \"./Pages/Start/Start\";\r\nimport Admin from \"./Pages/Admin/AdminPage\";\r\nimport Analytics from \"./Pages/Analytics/Analytics\";\r\nimport UserManagement from \"./Pages/UserManagement/UserManagement\";\r\nimport BudgetManagement from \"./Pages/BudgetManagement/BudgetManagement\";\r\nimport ComplianceManagement from \"./Pages/ComplianceManagement/ComplianceManagement\";\r\nimport CommandChat from \"./Pages/CommandChat/CommandChat\";\r\nimport CustomerSupport from \"./Pages/CustomerSupport/CustomerSupport\";\r\nimport Registration from \"./Pages/Registration/Registration\";\r\nimport Login from \"./Pages/LogIn/Login\";\r\nimport NotFoundPage from \"./Pages/ErrorPages/NotFoundPage\";\r\n\r\nimport TermsOfUse from \"./Pages/TermsOfUse/TermsOfUse\";\r\nimport JoinOurTeam from \"./Pages/JoinOurTeam/JoinOurTeam\";\r\nimport TelegramChannels from \"./Pages/TelegramChannels/TelegramChannelsPage\";\r\nimport ViberChannels from \"./Pages/ViberChannels/ViberChannelsPage\";\r\nimport WhatsAppChannels from \"./Pages/WhatsAppChannels/WhatsAppChannelsPage\";\r\nimport InstagramProfiles from \"./Pages/InstagramProfiles/InstagramProfiles\";\r\nimport Groups from \"./Pages/Groups/Groups\";\r\nimport ServiceReviews from \"./Pages/ServiceReviews/ServiceReviews\";\r\nimport Faq from \"./Pages/Faq/Faq\";\r\nimport ReportUs from \"./Pages/ReportUs/ReportUs\";\r\nimport ForgotPasswordPage from \"./Pages/LogIn/ForgotPasswordPage\";\r\nimport ServerUnavailablePage from \"./Pages/ErrorPages/ServerUnavailable\";\r\nimport ChannelDashboard from \"./Pages/ChannelDashboard/ChannelDashboard\";\r\nimport RequireCredentialsPage from \"./Pages/RequireCredentials/RequireCredentialsPage\";\r\nimport PublicationsPage from \"./Pages/Publications/PublicationsPage\";\r\n\r\nconst router = createBrowserRouter(\r\n  createRoutesFromElements(\r\n    <>\r\n      <Route path=\"/main\" element={<StartPage />} />\r\n      <Route path=\"/main/ukr\" element={<StartPage />} />\r\n      <Route path=\"/main/de\" element={<StartPage />} />\r\n      <Route path=\"/main/pl\" element={<StartPage />} />\r\n\r\n      <Route path=\"/admin/:id\" element={<Admin />} />\r\n      <Route path=\"/admin/ukr/:id\" element={<Admin />} />\r\n      <Route path=\"/admin/de/:id\" element={<Admin />} />\r\n      <Route path=\"/admin/pl/:id\" element={<Admin />} />\r\n\r\n      <Route path=\"/analytics/:id\" element={<Analytics />} />\r\n      <Route path=\"/analytics/ukr/:id\" element={<Analytics />} />\r\n      <Route path=\"/analytics/de/:id\" element={<Analytics />} />\r\n      <Route path=\"/analytics/pl/:id\" element={<Analytics />} />\r\n\r\n      <Route path=\"/user-management/:id\" element={<UserManagement />} />\r\n      <Route path=\"/user-management/ukr/:id\" element={<UserManagement />} />\r\n      <Route path=\"/user-management/de/:id\" element={<UserManagement />} />\r\n      <Route path=\"/user-management/pl/:id\" element={<UserManagement />} />\r\n\r\n      <Route path=\"/budget-management/:id\" element={<BudgetManagement />} />\r\n      <Route path=\"/budget-management/ukr/:id\" element={<BudgetManagement />} />\r\n      <Route path=\"/budget-management/de/:id\" element={<BudgetManagement />} />\r\n      <Route path=\"/budget-management/pl/:id\" element={<BudgetManagement />} />\r\n\r\n      <Route\r\n        path=\"/compliance-management/:id\"\r\n        element={<ComplianceManagement />}\r\n      />\r\n      <Route\r\n        path=\"/compliance-management/ukr/:id\"\r\n        element={<ComplianceManagement />}\r\n      />\r\n      <Route\r\n        path=\"/compliance-management/de/:id\"\r\n        element={<ComplianceManagement />}\r\n      />\r\n      <Route\r\n        path=\"/compliance-management/pl/:id\"\r\n        element={<ComplianceManagement />}\r\n      />\r\n\r\n      <Route path=\"/command-chat/:id\" element={<CommandChat />} />\r\n      <Route path=\"/command-chat/ukr/:id\" element={<CommandChat />} />\r\n      <Route path=\"/command-chat/de/:id\" element={<CommandChat />} />\r\n      <Route path=\"/command-chat/pl/:id\" element={<CommandChat />} />\r\n\r\n      <Route path=\"/customer-support/:id\" element={<CustomerSupport />} />\r\n      <Route path=\"/customer-support/ukr/:id\" element={<CustomerSupport />} />\r\n      <Route path=\"/customer-support/de/:id\" element={<CustomerSupport />} />\r\n      <Route path=\"/customer-support/pl/:id\" element={<CustomerSupport />} />\r\n\r\n      <Route path=\"/registration\" element={<Registration />} />\r\n      <Route path=\"/registration/ukr\" element={<Registration />} />\r\n      <Route path=\"/registration/de\" element={<Registration />} />\r\n      <Route path=\"/registration/pl\" element={<Registration />} />\r\n\r\n      <Route path=\"/sign-up\" element={<Registration />} />\r\n      <Route path=\"/sign-up/ukr\" element={<Registration />} />\r\n      <Route path=\"/sign-up/de\" element={<Registration />} />\r\n      <Route path=\"/sign-up/pl\" element={<Registration />} />\r\n\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/login/ukr\" element={<Login />} />\r\n      <Route path=\"/login/de\" element={<Login />} />\r\n      <Route path=\"/login/pl\" element={<Login />} />\r\n\r\n      <Route path=\"/sign-in\" element={<Login />} />\r\n      <Route path=\"/sign-in/ukr\" element={<Login />} />\r\n      <Route path=\"/sign-in/de\" element={<Login />} />\r\n      <Route path=\"/sign-in/pl\" element={<Login />} />\r\n\r\n      <Route path=\"/forgot\" element={<ForgotPasswordPage />} />\r\n\r\n      <Route path=\"*\" element={<NotFoundPage />} />\r\n\r\n      <Route path=\"/projects\" />\r\n      <Route path=\"/cooperation\" />\r\n      <Route path=\"/channel-board\" element={<ChannelDashboard />} />\r\n\r\n      <Route path=\"/telegram-channels\" element={<TelegramChannels />} />\r\n      <Route path=\"/telegram-channels/ukr\" element={<TelegramChannels />} />\r\n      <Route path=\"/telegram-channels/de\" element={<TelegramChannels />} />\r\n      <Route path=\"/telegram-channels/pl\" element={<TelegramChannels />} />\r\n\r\n      <Route path=\"/whatsapp-channels\" element={<WhatsAppChannels />} />\r\n      <Route path=\"/viber-channels\" element={<ViberChannels />} />\r\n      <Route path=\"/instagram-profiles\" element={<InstagramProfiles />} />\r\n\r\n      <Route path=\"/groups\" element={<Groups />} />\r\n      <Route path=\"/service-reviews\" element={<ServiceReviews />} />\r\n\r\n      <Route path=\"/faq\" element={<Faq />} />\r\n      <Route path=\"/report-us\" element={<ReportUs />} />\r\n\r\n      <Route path=\"/join-team\" element={<JoinOurTeam />} />\r\n      <Route path=\"/advertisement/edit/:id\" element={<RequireCredentialsPage />} />\r\n\r\n      <Route path=\"/publications\" element={<PublicationsPage/>}/>\r\n    </>\r\n  )\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <RouterProvider router={router} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\UserManagement\\UserManagement.js",[],[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\TermsOfUse\\TermsOfUse.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Start.js",["374","375","376"],[],"import React from \"react\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\nimport StartPageHeader from \"./Components/StartPageHeader/StartPageHeader\";\r\nimport StartPageIntro from \"./Components/StartPageIntro/StartPageIntro\";\r\nimport Instruction from \"./Components/Instruction/Instruction\";\r\nimport HowToBuy from \"./Components/HowToBuy/HowToBuy\";\r\nimport FeedbackCarousel from \"./Components/Feedback/FeedbackCarousel\";\r\n\r\nimport PriceList from \"./Components/PriceList/PriceList\";\r\nimport HotOffers from \"./Components/HotOffers/HotOffers\";\r\n\r\nconst StartPage = () => {\r\n    return (\r\n        <div className=\"start-page-container\">\r\n            <StartPageHeader/>\r\n            {/*<StartPageIntro/>*/}\r\n            <Instruction/>\r\n            {/*<PriceList/>*/}\r\n            <HowToBuy/>\r\n            {/*<FeedbackCarousel/>*/}\r\n            <HotOffers/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartPage;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\HowToBuy\\HowToBuy.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\Instruction\\Instruction.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\StartPageHeader\\StartPageHeader.js",["377","378","379","380","381","382","383","384","385","386"],[],"import React from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuItemOption,\r\n  MenuGroup,\r\n  MenuOptionGroup,\r\n  MenuDivider,\r\n  Switch,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaGlobe } from \"react-icons/fa\";\r\n\r\nconst StartPageHeader = () => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n  const navigate = useNavigate();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Flex\r\n          bg={useColorModeValue(\"white\", \"gray.800\")}\r\n          color={useColorModeValue(\"gray.600\", \"white\")}\r\n          minH={\"60px\"}\r\n          py={{ base: 2 }}\r\n          px={{ base: 4 }}\r\n          borderBottom={1}\r\n          borderStyle={\"solid\"}\r\n          borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n          align={\"center\"}\r\n        >\r\n          <Flex\r\n            flex={{ base: 1, md: \"auto\" }}\r\n            ml={{ base: -2 }}\r\n            display={{ base: \"flex\", md: \"none\" }}\r\n          >\r\n            <IconButton\r\n              onClick={onToggle}\r\n              icon={\r\n                isOpen ? (\r\n                  <CloseIcon w={3} h={3} />\r\n                ) : (\r\n                  <HamburgerIcon w={5} h={5} />\r\n                )\r\n              }\r\n              variant={\"ghost\"}\r\n              aria-label={\"Toggle Navigation\"}\r\n            />\r\n          </Flex>\r\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\r\n            <Text\r\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\r\n              fontFamily={\"heading\"}\r\n              color={useColorModeValue(\"gray.800\", \"white\")}\r\n            >\r\n              Logo\r\n            </Text>\r\n\r\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\r\n              <DesktopNav />\r\n            </Flex>\r\n          </Flex>\r\n\r\n          <Stack\r\n            flex={{ base: 1, md: 0 }}\r\n            justify={\"flex-end\"}\r\n            direction={\"row\"}\r\n            spacing={6}\r\n          >\r\n            <Flex align=\"center\">\r\n              <Flex mr={4}>\r\n              {/* Change Language button */}\r\n              <Button m={2}>\r\n                <FaGlobe />\r\n              </Button>\r\n              {/* Change color mode */}\r\n              <Button m={2} onClick={toggleColorMode}>\r\n                {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\r\n              </Button>\r\n              </Flex>\r\n\r\n              <Button\r\n                cursor=\"pointer\"\r\n                onClick={() => navigate(\"/login\")}\r\n                as={\"a\"}\r\n                fontSize={\"sm\"}\r\n                fontWeight={400}\r\n                variant={\"link\"}\r\n                mr={4}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                cursor=\"pointer\"\r\n                onClick={() => navigate(\"/registration\")}\r\n                as={\"a\"}\r\n                display={{ base: \"none\", md: \"inline-flex\" }}\r\n                fontSize={\"sm\"}\r\n                fontWeight={600}\r\n                color={\"white\"}\r\n                bg={\"green.400\"}\r\n                _hover={{\r\n                  bg: \"green.300\",\r\n                }}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Flex>\r\n          </Stack>\r\n        </Flex>\r\n\r\n        <Collapse in={isOpen} animateOpacity>\r\n          <MobileNav />\r\n        </Collapse>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\r\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\r\n  const popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Stack direction={\"row\"} spacing={4}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                onClick={() => navigate(\"/\" + navItem.navLink)}\r\n                fontSize={\"sm\"}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: linkHoverColor,\r\n                }}\r\n              >\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={\"xl\"}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={\"xl\"}\r\n                minW={\"sm\"}\r\n              >\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={\"group\"}\r\n      display={\"block\"}\r\n      p={2}\r\n      rounded={\"md\"}\r\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"gray.900\") }}\r\n    >\r\n      <Stack direction={\"row\"} align={\"center\"}>\r\n        <Box>\r\n          <Text\r\n            transition={\"all .3s ease\"}\r\n            _groupHover={{ color: \"blue.400\" }}\r\n            fontWeight={500}\r\n          >\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={\"sm\"}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={\"all .3s ease\"}\r\n          transform={\"translateX(-10px)\"}\r\n          opacity={0}\r\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\r\n          justify={\"flex-end\"}\r\n          align={\"center\"}\r\n          flex={1}\r\n        >\r\n          <Icon color={\"blue.400\"} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue(\"white\", \"gray.800\")}\r\n      p={4}\r\n      display={{ md: \"none\" }}\r\n    >\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? \"#\"}\r\n        justify={\"space-between\"}\r\n        align={\"center\"}\r\n        _hover={{\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\r\n        >\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={\"all .25s ease-in-out\"}\r\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={\"solid\"}\r\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n          align={\"start\"}\r\n        >\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst NAV_ITEMS = [\r\n  {\r\n    label: \"Home\",\r\n    navLink: \"main\"\r\n  },\r\n  {\r\n    label: \"Find Orders\",\r\n    children: [\r\n      {\r\n        label: \"Community\",\r\n        subLabel: \"Connect with other people\",\r\n        href: \"#\",\r\n      },\r\n      {\r\n        label: \"New & Noteworthy\",\r\n        subLabel: \"Up-and-coming Designers\",\r\n        href: \"#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Find Executors\",\r\n    children: [\r\n      {\r\n        label: \"Job Board\",\r\n        subLabel: \"Find your dream design job\",\r\n        navLink: \"job-board\",\r\n      },\r\n      {\r\n        label: \"Freelance Projects\",\r\n        subLabel: \"An exclusive list for contract work\",\r\n        navLink: \"projects\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Cooperation\",\r\n    navLink: \"cooperation\",\r\n  },\r\n  {\r\n    label: \"Channel Dashboard\",\r\n    navLink: \"channel-board\",\r\n  },\r\n];\r\n\r\n\r\nexport default StartPageHeader;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\StartPageIntro\\StartPageIntro.js",["387","388","389","390","391","392","393","394","395","396","397"],[],"import {\r\n  Box,\r\n  Text,\r\n  Avatar,\r\n  Heading,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  StatGroup,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Card,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst StartPageIntro = () => {\r\n  const [stats, setStats] = useState({\r\n    users: 1000,\r\n    products: 6052,\r\n    revenue: 785,\r\n  });\r\n  return (\r\n    <>\r\n      <Heading mt={10} textAlign=\"center\">\r\n        Placing advertisements in any channel in any messenger and social media\r\n      </Heading>\r\n      <Box display=\"block\" justifyContent=\"space-around\" mt={10} >\r\n        <Box gap={6} maxW={600}>\r\n          <Card borderRadius={10} padding={10}>\r\n            <CardHeader>Collected Fees</CardHeader>\r\n            <CardBody>£0.00</CardBody>\r\n            <CardFooter>\r\n              9.05%\r\n            </CardFooter>\r\n          </Card>\r\n          <Card borderRadius={10} padding={10}>\r\n            <CardHeader>Collected Fees</CardHeader>\r\n            <CardBody>£0.00</CardBody>\r\n            <CardFooter>\r\n              9.05%\r\n            </CardFooter>\r\n          </Card>\r\n          <Card borderRadius={10} padding={10}>\r\n            <CardHeader>Collected Fees</CardHeader>\r\n            <CardBody>£0.00</CardBody>\r\n            <CardFooter>\r\n              9.05%\r\n            </CardFooter>\r\n          </Card>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartPageIntro;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ServiceReviews\\ServiceReviews.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ReportUs\\ReportUs.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\Registration.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PopupError from \"../../Components/PopupError/PopupError\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\nimport ModalSuccessfulRegistration from \"../../Components/modal/ModalSuccessfulRegistration\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  InputRightElement,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n  useColorModeValue,\r\n  HStack,\r\n  Avatar,\r\n  AvatarBadge,\r\n  IconButton,\r\n  Center,\r\n  InputGroup,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n  OrderedList,\r\n  UnorderedList,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport DropZone from \"./DragAndDropFile\";\r\n\r\nimport { FiBell, FiMoon, FiArrowLeft } from \"react-icons/fi\";\r\n\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\n\r\nimport { SmallCloseIcon } from \"@chakra-ui/icons\";\r\nimport UserFormHeader from \"./UserFormHeader\";\r\n\r\nconst Registration = () => {\r\n  const navigate = useNavigate();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(true);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [successfulRegistration, setSuccessfulRegistration] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handlePasswordClick = () => setShowPassword(!showPassword);\r\n  const handleConfirmPasswordClick = () =>\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    <ModalSuccessfulRegistration />;\r\n    console.log({\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      userName,\r\n      password,\r\n      confirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleSignUp = (event) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    fetch(\"https://localhost:50555/api/UserAccount/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        firstName,\r\n        lastName,\r\n        isAdmin,\r\n        email,\r\n        userName,\r\n        password,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Registration failed!\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        setSuccessfulRegistration(true);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.error(\"Registration failed\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserFormHeader link=\"/main\" />\r\n      <Flex\r\n        minH={\"100vh\"}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n      >\r\n        <Stack\r\n          spacing={4}\r\n          w={\"full\"}\r\n          maxW={\"80vh\"}\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          rounded={\"xl\"}\r\n          boxShadow={\"lg\"}\r\n          p={12}\r\n          my={12}\r\n        >\r\n          <Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\r\n            Registration Form\r\n          </Heading>\r\n\r\n          <FormControl id=\"userName\">\r\n            <FormLabel>User Icon</FormLabel>\r\n            <Stack direction={[\"column\", \"row\"]} spacing={6}>\r\n              <Center>\r\n                <Avatar size=\"xl\" src=\"https://bit.ly/sage-adebayo\">\r\n                  <AvatarBadge\r\n                    as={IconButton}\r\n                    size=\"sm\"\r\n                    rounded=\"full\"\r\n                    top=\"-10px\"\r\n                    colorScheme=\"red\"\r\n                    aria-label=\"remove Image\"\r\n                    icon={<SmallCloseIcon />}\r\n                  />\r\n                </Avatar>\r\n              </Center>\r\n              <Stack>\r\n                <Center w=\"full\">\r\n                  <Button colorScheme=\"teal\" onClick={onOpen} w=\"full\">\r\n                    Change Icon\r\n                  </Button>\r\n                </Center>\r\n              </Stack>\r\n            </Stack>\r\n          </FormControl>\r\n\r\n          <FormControl id=\"firstName\" isRequired>\r\n            <FormLabel>First Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your first name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"middleName\">\r\n            <FormLabel>Middle Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your middle name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"lastName\" isRequired>\r\n            <FormLabel>Last Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your last name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"userName\" isRequired>\r\n            <FormLabel>Username</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your username\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              pattern=\"[a-zA-Z0-9]+\"\r\n              type=\"text\"\r\n            />\r\n            {/* username validation */}\r\n            <Box borderRadius={6} p={5} mt={2} spacing={4}>\r\n              <Alert borderRadius={6}>\r\n                <List spacing={3}>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains from 3 to 30 symbols\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains letters, underscore\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Unique username\r\n                  </ListItem>\r\n                </List>\r\n              </Alert>\r\n            </Box>\r\n\r\n            {/* username uniqueness validation */}\r\n          </FormControl>\r\n          <FormControl id=\"email\" isRequired>\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Input\r\n              placeholder=\"your-email@example.com\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"email\"\r\n            />\r\n            <Alert borderRadius={6} mt={2} status=\"error\">\r\n              <AlertIcon />\r\n              Incorrect email\r\n            </Alert>\r\n          </FormControl>\r\n          <FormControl id=\"password\" isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                pr=\"4.5rem\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Input your password\"\r\n                _placeholder={{ color: \"gray.500\" }}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handlePasswordClick}>\r\n                  {showPassword ? \"Hide\" : \"Show\"}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <Box borderRadius={6} p={5} mt={2} spacing={4}>\r\n              <Alert borderRadius={6}>\r\n                <List spacing={3}>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least 8 symbols\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least one number\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least one special symbol (!, @, #, *, ^, &, %,\r\n                    $)\r\n                  </ListItem>\r\n                </List>\r\n              </Alert>\r\n            </Box>\r\n          </FormControl>\r\n          <FormControl id=\"confirmPassword\" isRequired>\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                pr=\"4.5rem\"\r\n                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Confirm your password\"\r\n                _placeholder={{ color: \"gray.500\" }}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button\r\n                  h=\"1.75rem\"\r\n                  size=\"sm\"\r\n                  onClick={handleConfirmPasswordClick}\r\n                >\r\n                  {showConfirmPassword ? \"Hide\" : \"Show\"}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <Alert borderRadius={6} mt={2} status=\"error\">\r\n              <AlertIcon />\r\n              Passwords do not match\r\n            </Alert>\r\n          </FormControl>\r\n          <Stack spacing={6} direction={[\"column\", \"row\"]}>\r\n            <Button\r\n            onClick={() => {\r\n              setLoading(true);\r\n            }}\r\n              bg={\"blue.400\"}\r\n              color={\"white\"}\r\n              w=\"full\"\r\n              _hover={{\r\n                bg: \"blue.500\",\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      {loading && <Loader/>}\r\n      </Flex>\r\n\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Modal Title</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <DropZone></DropZone>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"ghost\">Secondary Action</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Login.js",["417","418","419","420","421","422","423","424","425","426"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport localStorage from \"local-storage\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginIllustration from \"../../Images/login-illustration.png\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\nimport logo from \"../../Images/logo_transparent.png\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\nimport { Fade } from \"@chakra-ui/react\";\r\nimport PopupError from \"../../Components/PopupError/PopupError\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  HStack,\r\n  Input,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { OAuthButtonGroup } from \"./Group/OAuthButtonGroup\";\r\nimport { PasswordField } from \"./Group/PasswordField\";\r\nimport { Logo } from \"./Group/Logo\";\r\n\r\nimport UserFormHeader from \"../Registration/UserFormHeader\";\r\nimport { FailedAuthentication } from \"./Group/FailedAuthentication\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  {\r\n    /* Google authentication */\r\n  }\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://localhost:50555/api/UserAccount/login\", data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setLoading(false);\r\n        const navigationLink = '/admin/' + response.data.id\r\n        navigate(navigationLink);\r\n      })\r\n      .catch((error) => {\r\n        setLoginError(true);\r\n        console.error(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserFormHeader link=\"/main\" />\r\n      <Container\r\n        maxW=\"lg\"\r\n        py={{\r\n          base: \"12\",\r\n          md: \"24\",\r\n        }}\r\n        px={{\r\n          base: \"0\",\r\n          sm: \"8\",\r\n        }}\r\n      >\r\n        {loginError && <FailedAuthentication />}\r\n        <Stack spacing=\"8\">\r\n          <Stack spacing=\"6\">\r\n            <Logo />\r\n            <Stack\r\n              spacing={{\r\n                base: \"2\",\r\n                md: \"3\",\r\n              }}\r\n              textAlign=\"center\"\r\n            >\r\n              <Heading\r\n                size={{\r\n                  base: \"xs\",\r\n                  md: \"sm\",\r\n                }}\r\n              >\r\n                Log in to your account\r\n              </Heading>\r\n              <HStack spacing=\"1\" justify=\"center\">\r\n                <Text color=\"muted\">Don't have an account?</Text>\r\n                <Button\r\n                  onClick={() => navigate(\"/registration\")}\r\n                  variant=\"link\"\r\n                  colorScheme=\"blue\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </HStack>\r\n            </Stack>\r\n          </Stack>\r\n          <Box\r\n            py={{\r\n              base: \"0\",\r\n              sm: \"8\",\r\n            }}\r\n            px={{\r\n              base: \"4\",\r\n              sm: \"10\",\r\n            }}\r\n            bg={{\r\n              base: \"transparent\",\r\n              sm: \"bg-surface\",\r\n            }}\r\n            boxShadow={{\r\n              base: \"none\",\r\n              sm: \"md\",\r\n            }}\r\n            borderRadius={{\r\n              base: \"none\",\r\n              sm: \"xl\",\r\n            }}\r\n          >\r\n            <Stack spacing=\"6\">\r\n              <Stack spacing=\"5\">\r\n                <FormControl onSubmit={handleSubmit}>\r\n                  <FormLabel htmlFor=\"username\">Username</FormLabel>\r\n                  <Input\r\n                    id=\"username\"\r\n                    value={username}\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    type=\"username\"\r\n                  />\r\n                </FormControl>\r\n                <PasswordField\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  type=\"password\"\r\n                />\r\n              </Stack>\r\n              <HStack justify=\"space-between\">\r\n                <Checkbox defaultChecked>Remember me</Checkbox>\r\n                <Button\r\n                  onClick={() => navigate(\"/forgot\")}\r\n                  variant=\"link\"\r\n                  colorScheme=\"blue\"\r\n                  size=\"sm\"\r\n                >\r\n                  Forgot password?\r\n                </Button>\r\n              </HStack>\r\n              <Stack spacing=\"6\">\r\n                <Button\r\n                  onClick={() => handleSubmit()}\r\n                  type=\"submit\"\r\n                  bg={\"blue.400\"}\r\n                  color={\"white\"}\r\n                  w=\"full\"\r\n                  _hover={{\r\n                    bg: \"blue.500\",\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <HStack>\r\n                  <Divider />\r\n                  <Text fontSize=\"sm\" whiteSpace=\"nowrap\" color=\"muted\">\r\n                    or continue with\r\n                  </Text>\r\n                  <Divider />\r\n                </HStack>\r\n                <OAuthButtonGroup />\r\n              </Stack>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n        {loading && <Loader />}\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\JoinOurTeam\\JoinOurTeam.js",["427","428","429","430","431","432","433","434","435","436","437","438","439"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport UserFormHeader from \"../Registration/UserFormHeader\";\r\nimport { SmallCloseIcon } from \"@chakra-ui/icons\";\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\nimport DropZone from \"../Registration/DragAndDropFile\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\nimport ModalSuccessfulRegistration from \"../../Components/modal/ModalSuccessfulRegistration\";\r\n\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    InputRightElement,\r\n    Button,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    Stack,\r\n    useColorModeValue,\r\n    Avatar,\r\n    AvatarBadge,\r\n    IconButton,\r\n    Center,\r\n    InputGroup,\r\n    List,\r\n    ListItem,\r\n    ListIcon,\r\n    OrderedList,\r\n    UnorderedList,\r\n    useDisclosure,\r\n  } from \"@chakra-ui/react\";\r\n  \r\n  import {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n  } from \"@chakra-ui/react\";\r\n\r\nconst JoinOurTeam = () => {\r\n    const navigate = useNavigate();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(true);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [successfulRegistration, setSuccessfulRegistration] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handlePasswordClick = () => setShowPassword(!showPassword);\r\n  const handleConfirmPasswordClick = () =>\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    <ModalSuccessfulRegistration />;\r\n    console.log({\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      userName,\r\n      password,\r\n      confirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleSignUp = (event) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    fetch(\"https://localhost:50555/api/UserAccount/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        firstName,\r\n        lastName,\r\n        isAdmin,\r\n        email,\r\n        userName,\r\n        password,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Registration failed!\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        setSuccessfulRegistration(true);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.error(\"Registration failed\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserFormHeader link=\"/main\" />\r\n      <Flex\r\n        minH={\"100vh\"}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n      >\r\n        <Stack\r\n          spacing={4}\r\n          w={\"full\"}\r\n          maxW={\"80vh\"}\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          rounded={\"xl\"}\r\n          boxShadow={\"lg\"}\r\n          p={12}\r\n          my={12}\r\n        >\r\n          <Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\r\n            Registration Form\r\n          </Heading>\r\n\r\n          <FormControl id=\"userName\">\r\n            <FormLabel>User Icon</FormLabel>\r\n            <Stack direction={[\"column\", \"row\"]} spacing={6}>\r\n              <Center>\r\n                <Avatar size=\"xl\" src=\"https://bit.ly/sage-adebayo\">\r\n                  <AvatarBadge\r\n                    as={IconButton}\r\n                    size=\"sm\"\r\n                    rounded=\"full\"\r\n                    top=\"-10px\"\r\n                    colorScheme=\"red\"\r\n                    aria-label=\"remove Image\"\r\n                    icon={<SmallCloseIcon />}\r\n                  />\r\n                </Avatar>\r\n              </Center>\r\n              <Stack>\r\n                <Center w=\"full\">\r\n                  <Button colorScheme=\"teal\" onClick={onOpen} w=\"full\">\r\n                    Change Icon\r\n                  </Button>\r\n                </Center>\r\n              </Stack>\r\n            </Stack>\r\n          </FormControl>\r\n\r\n          <FormControl id=\"firstName\" isRequired>\r\n            <FormLabel>First Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your first name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"middleName\">\r\n            <FormLabel>Middle Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your middle name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"lastName\" isRequired>\r\n            <FormLabel>Last Name</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your last name\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"text\"\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"userName\" isRequired>\r\n            <FormLabel>Username</FormLabel>\r\n            <Input\r\n              placeholder=\"Input your username\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              pattern=\"[a-zA-Z0-9]+\"\r\n              type=\"text\"\r\n            />\r\n            {/* username validation */}\r\n            <Box borderRadius={6} p={5} mt={2} spacing={4}>\r\n              <Alert borderRadius={6}>\r\n                <List spacing={3}>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains from 3 to 30 symbols\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains letters, underscore\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Unique username\r\n                  </ListItem>\r\n                </List>\r\n              </Alert>\r\n            </Box>\r\n\r\n            {/* username uniqueness validation */}\r\n          </FormControl>\r\n          <FormControl id=\"email\" isRequired>\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Input\r\n              placeholder=\"your-email@example.com\"\r\n              _placeholder={{ color: \"gray.500\" }}\r\n              type=\"email\"\r\n            />\r\n            <Alert borderRadius={6} mt={2} status=\"error\">\r\n              <AlertIcon />\r\n              Incorrect email\r\n            </Alert>\r\n          </FormControl>\r\n          <FormControl id=\"password\" isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                pr=\"4.5rem\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Input your password\"\r\n                _placeholder={{ color: \"gray.500\" }}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handlePasswordClick}>\r\n                  {showPassword ? \"Hide\" : \"Show\"}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <Box borderRadius={6} p={5} mt={2} spacing={4}>\r\n              <Alert borderRadius={6}>\r\n                <List spacing={3}>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least 8 symbols\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least one number\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListIcon as={MdCheckCircle} color=\"green.500\" />\r\n                    Contains at least one special symbol (!, @, #, *, ^, &, %,\r\n                    $)\r\n                  </ListItem>\r\n                </List>\r\n              </Alert>\r\n            </Box>\r\n          </FormControl>\r\n          <FormControl id=\"confirmPassword\" isRequired>\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                pr=\"4.5rem\"\r\n                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Confirm your password\"\r\n                _placeholder={{ color: \"gray.500\" }}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button\r\n                  h=\"1.75rem\"\r\n                  size=\"sm\"\r\n                  onClick={handleConfirmPasswordClick}\r\n                >\r\n                  {showConfirmPassword ? \"Hide\" : \"Show\"}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <Alert borderRadius={6} mt={2} status=\"error\">\r\n              <AlertIcon />\r\n              Passwords do not match\r\n            </Alert>\r\n          </FormControl>\r\n          <Stack spacing={6} direction={[\"column\", \"row\"]}>\r\n            <Button\r\n            onClick={() => {\r\n              setLoading(true);\r\n            }}\r\n              bg={\"blue.400\"}\r\n              color={\"white\"}\r\n              w=\"full\"\r\n              _hover={{\r\n                bg: \"blue.500\",\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      {loading && <Loader/>}\r\n      </Flex>\r\n\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Modal Title</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <DropZone></DropZone>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"ghost\">Secondary Action</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JoinOurTeam;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\InstagramProfiles\\InstagramProfiles.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Groups\\Groups.js",["440"],[],"import React from \"react\";\r\n\r\nconst Groups = () => {\r\n\r\n}\r\n\r\nexport default Groups;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Faq\\Faq.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ErrorPages\\NotFoundPage.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CustomerSupport\\CustomerSupport.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ComplianceManagement\\ComplianceManagement.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\BudgetManagement\\BudgetManagement.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Analytics\\Analytics.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\footer\\Footer.js",["441"],[],"import React from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Link,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text,\r\n    Flex,\r\n    Tag,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react';\r\n  import { ReactNode } from 'react';\r\n  \r\n  const Logo = (props) => {\r\n    return (\r\n      <svg\r\n        height={32}\r\n        viewBox=\"0 0 120 28\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        {...props}>\r\n        <path\r\n          d=\"M34.87 8.07H37.87V20.2H34.87V8.07ZM39.06 15.62C39.06 12.62 40.9 10.83 43.74 10.83C46.58 10.83 48.42 12.62 48.42 15.62C48.42 18.62 46.62 20.42 43.74 20.42C40.86 20.42 39.06 18.67 39.06 15.62ZM45.41 15.62C45.41 13.97 44.76 13 43.74 13C42.72 13 42.08 14 42.08 15.62C42.08 17.24 42.71 18.22 43.74 18.22C44.77 18.22 45.41 17.3 45.41 15.63V15.62ZM49.55 20.79H52.43C52.5671 21.0945 52.7988 21.3466 53.0907 21.5088C53.3826 21.6709 53.7191 21.7345 54.05 21.69C55.19 21.69 55.79 21.07 55.79 20.17V18.49H55.73C55.491 19.0049 55.1031 19.4363 54.6165 19.7287C54.1299 20.021 53.5668 20.1608 53 20.13C50.81 20.13 49.36 18.46 49.36 15.59C49.36 12.72 50.74 10.91 53.04 10.91C53.6246 10.8871 54.2022 11.0434 54.6955 11.3579C55.1888 11.6725 55.5742 12.1303 55.8 12.67V12.67V11H58.8V20.1C58.8 22.29 56.87 23.65 54.02 23.65C51.37 23.65 49.72 22.46 49.55 20.8V20.79ZM55.8 15.61C55.8 14.15 55.13 13.23 54.07 13.23C53.01 13.23 52.36 14.14 52.36 15.61C52.36 17.08 53 17.91 54.07 17.91C55.14 17.91 55.8 17.1 55.8 15.62V15.61ZM59.93 15.61C59.93 12.61 61.77 10.82 64.61 10.82C67.45 10.82 69.3 12.61 69.3 15.61C69.3 18.61 67.5 20.41 64.61 20.41C61.72 20.41 59.93 18.67 59.93 15.62V15.61ZM66.28 15.61C66.28 13.96 65.63 12.99 64.61 12.99C63.59 12.99 63 14 63 15.63C63 17.26 63.63 18.23 64.65 18.23C65.67 18.23 66.28 17.3 66.28 15.63V15.61ZM70.44 8.82C70.4321 8.51711 70.5144 8.2187 70.6763 7.96261C70.8383 7.70651 71.0726 7.50427 71.3496 7.38151C71.6266 7.25875 71.9338 7.221 72.2323 7.27305C72.5308 7.32511 72.8071 7.46462 73.0262 7.67389C73.2454 7.88317 73.3974 8.1528 73.4631 8.44859C73.5288 8.74438 73.5052 9.05301 73.3952 9.33536C73.2853 9.61772 73.094 9.86108 72.8456 10.0346C72.5973 10.2081 72.3029 10.304 72 10.31C71.7992 10.3238 71.5977 10.2959 71.4082 10.2281C71.2186 10.1603 71.0452 10.0541 70.8987 9.91601C70.7522 9.77796 70.6358 9.61111 70.5569 9.42594C70.4779 9.24077 70.4381 9.04128 70.44 8.84V8.82ZM70.44 11.02H73.44V20.2H70.44V11.02ZM84.33 15.61C84.33 18.61 83 20.32 80.72 20.32C80.1354 20.3575 79.5533 20.2146 79.0525 19.9106C78.5517 19.6065 78.1564 19.156 77.92 18.62H77.86V23.14H74.86V11H77.86V12.64H77.92C78.1454 12.0951 78.5332 11.6329 79.0306 11.3162C79.528 10.9995 80.1109 10.8437 80.7 10.87C83 10.91 84.37 12.63 84.37 15.63L84.33 15.61ZM81.33 15.61C81.33 14.15 80.66 13.22 79.61 13.22C78.56 13.22 77.89 14.16 77.88 15.61C77.87 17.06 78.56 17.99 79.61 17.99C80.66 17.99 81.33 17.08 81.33 15.63V15.61ZM89.48 10.81C91.97 10.81 93.48 11.99 93.55 13.88H90.82C90.82 13.23 90.28 12.82 89.45 12.82C88.62 12.82 88.25 13.14 88.25 13.61C88.25 14.08 88.58 14.23 89.25 14.37L91.17 14.76C93 15.15 93.78 15.89 93.78 17.28C93.78 19.18 92.05 20.4 89.5 20.4C86.95 20.4 85.28 19.18 85.15 17.31H88.04C88.13 17.99 88.67 18.39 89.55 18.39C90.43 18.39 90.83 18.1 90.83 17.62C90.83 17.14 90.55 17.04 89.83 16.89L88.1 16.52C86.31 16.15 85.37 15.2 85.37 13.8C85.39 12 87 10.83 89.48 10.83V10.81ZM103.79 20.18H100.9V18.47H100.84C100.681 19.0441 100.331 19.5466 99.8468 19.8941C99.3629 20.2415 98.7748 20.413 98.18 20.38C97.7242 20.4059 97.2682 20.3337 96.8427 20.1682C96.4172 20.0027 96.0322 19.7479 95.7137 19.4208C95.3952 19.0938 95.1505 18.7021 94.9964 18.2724C94.8422 17.8427 94.7821 17.3849 94.82 16.93V11H97.82V16.24C97.82 17.33 98.38 17.91 99.31 17.91C99.5281 17.9104 99.7437 17.8643 99.9425 17.7746C100.141 17.6849 100.319 17.5537 100.463 17.3899C100.606 17.226 100.714 17.0333 100.777 16.8247C100.84 16.616 100.859 16.3962 100.83 16.18V11H103.83L103.79 20.18ZM105.24 11H108.14V12.77H108.2C108.359 12.2035 108.702 11.7057 109.174 11.3547C109.646 11.0037 110.222 10.8191 110.81 10.83C111.409 10.7821 112.003 10.9612 112.476 11.3318C112.948 11.7024 113.264 12.2372 113.36 12.83H113.42C113.601 12.2309 113.977 11.7093 114.488 11.3472C114.998 10.9851 115.615 10.8031 116.24 10.83C116.648 10.8163 117.054 10.8886 117.432 11.0422C117.811 11.1957 118.152 11.4272 118.435 11.7214C118.718 12.0157 118.936 12.3662 119.075 12.7501C119.213 13.134 119.27 13.5429 119.24 13.95V20.2H116.24V14.75C116.24 13.75 115.79 13.29 114.95 13.29C114.763 13.2884 114.577 13.327 114.406 13.4032C114.235 13.4794 114.082 13.5914 113.958 13.7317C113.834 13.872 113.741 14.0372 113.686 14.2163C113.631 14.3955 113.616 14.5843 113.64 14.77V20.2H110.79V14.71C110.79 13.79 110.34 13.29 109.52 13.29C109.331 13.2901 109.143 13.3303 108.971 13.408C108.798 13.4858 108.643 13.5993 108.518 13.741C108.392 13.8827 108.298 14.0495 108.241 14.2304C108.185 14.4112 108.167 14.6019 108.19 14.79V20.2H105.19L105.24 11Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M26.48 8.62001C25.9711 7.45637 25.2975 6.37195 24.48 5.40001C23.2714 3.92035 21.7632 2.71341 20.0546 1.85862C18.346 1.00383 16.4758 0.520582 14.567 0.440674C12.6582 0.360766 10.7541 0.68601 8.98 1.395C7.20594 2.104 5.60214 3.18067 4.27417 4.55414C2.94619 5.92762 1.92414 7.56676 1.27529 9.36369C0.626436 11.1606 0.365493 13.0746 0.509634 14.9796C0.653775 16.8847 1.19973 18.7376 2.11157 20.4164C3.02341 22.0953 4.28046 23.562 5.79998 24.72C6.77498 25.4779 7.85233 26.094 8.99998 26.55C10.609 27.2094 12.3311 27.549 14.07 27.55C17.6594 27.5421 21.0992 26.1113 23.6354 23.5713C26.1717 21.0314 27.5973 17.5894 27.6 14C27.6026 12.1485 27.2213 10.3166 26.48 8.62001V8.62001ZM14.06 3.19001C15.6215 3.18984 17.1642 3.53115 18.58 4.19001V4.19001C18.2347 4.33918 17.8718 4.44337 17.5 4.50001C16.2766 4.67711 15.1432 5.24509 14.2691 6.11918C13.3951 6.99328 12.8271 8.12661 12.65 9.35001C12.5722 10.0361 12.2602 10.6744 11.7665 11.1572C11.2728 11.64 10.6277 11.9377 9.93998 12C8.71657 12.1771 7.58324 12.7451 6.70915 13.6192C5.83505 14.4933 5.26707 15.6266 5.08998 16.85C5.03002 17.5024 4.75167 18.1155 4.29998 18.59V18.59C3.52063 16.9433 3.17053 15.1261 3.28225 13.3077C3.39397 11.4893 3.96388 9.72871 4.93895 8.18976C5.91401 6.65081 7.26255 5.38353 8.85905 4.50586C10.4555 3.62819 12.2481 3.16865 14.07 3.17001L14.06 3.19001ZM5.78998 21C5.90998 20.89 6.02998 20.79 6.14998 20.67C7.03963 19.8075 7.61069 18.6689 7.76998 17.44C7.83456 16.7493 8.14298 16.1041 8.63998 15.62C9.11822 15.1222 9.76195 14.8163 10.45 14.76C11.6734 14.5829 12.8067 14.0149 13.6808 13.1408C14.5549 12.2667 15.1229 11.1334 15.3 9.91001C15.3432 9.18752 15.6533 8.50685 16.17 8.00001C16.66 7.51186 17.3099 7.21711 18 7.17001C19.1239 7.01537 20.1721 6.51573 21 5.74001C21.9426 6.52208 22.7413 7.46291 23.36 8.52001C23.322 8.57136 23.2784 8.61832 23.23 8.66001C22.7526 9.16221 22.1098 9.47477 21.42 9.54001C20.1953 9.71401 19.0603 10.281 18.1856 11.1557C17.311 12.0303 16.744 13.1654 16.57 14.39C16.4995 15.0784 16.1932 15.7213 15.7029 16.2098C15.2127 16.6982 14.5687 17.0021 13.88 17.07C12.653 17.2458 11.5154 17.8126 10.6363 18.6863C9.75713 19.5601 9.18328 20.6941 8.99998 21.92C8.94616 22.4087 8.77832 22.878 8.50998 23.29C7.48397 22.6808 6.56506 21.9072 5.78998 21V21ZM14.06 24.86C13.0452 24.8611 12.0354 24.7197 11.06 24.44C11.3936 23.818 11.6106 23.1402 11.7 22.44C11.7701 21.7531 12.0749 21.1114 12.5632 20.6232C13.0514 20.135 13.6931 19.8301 14.38 19.76C15.6052 19.5849 16.7408 19.0178 17.6168 18.1435C18.4929 17.2693 19.0624 16.1349 19.24 14.91C19.3101 14.2231 19.6149 13.5814 20.1032 13.0932C20.5914 12.605 21.2331 12.3001 21.92 12.23C22.842 12.1101 23.7208 11.7668 24.48 11.23C24.9015 12.8279 24.9515 14.5012 24.626 16.1214C24.3004 17.7416 23.6081 19.2657 22.6021 20.5768C21.5961 21.8879 20.3031 22.9511 18.8224 23.6849C17.3417 24.4187 15.7125 24.8036 14.06 24.81V24.86Z\"\r\n          fill=\"#2F855A\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  const ListHeader = ({children}) => {\r\n    return (\r\n      <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\r\n        {children}\r\n      </Text>\r\n    );\r\n  };\r\n  \r\n  export default function Footer() {\r\n    return (\r\n      <Box\r\n        bg={useColorModeValue('gray.50', 'gray.900')}\r\n        color={useColorModeValue('gray.700', 'gray.200')}>\r\n        <Container as={Stack} maxW={'6xl'} py={10}>\r\n          <SimpleGrid columns={{ base: 1, sm: 2, md: 4 }} spacing={8}>\r\n            <Stack align={'flex-start'}>\r\n              <ListHeader>Product</ListHeader>\r\n              <Link href={'#'}>Overview</Link>\r\n              <Stack direction={'row'} align={'center'} spacing={2}>\r\n                <Link href={'#'}>Features</Link>\r\n                <Tag\r\n                  size={'sm'}\r\n                  bg={useColorModeValue('green.300', 'green.800')}\r\n                  ml={2}\r\n                  color={'white'}>\r\n                  New\r\n                </Tag>\r\n              </Stack>\r\n              <Link href={'#'}>Tutorials</Link>\r\n              <Link href={'#'}>Pricing</Link>\r\n              <Link href={'#'}>Releases</Link>\r\n            </Stack>\r\n            <Stack align={'flex-start'}>\r\n              <ListHeader>Company</ListHeader>\r\n              <Link href={'#'}>About Us</Link>\r\n              <Link href={'#'}>Press</Link>\r\n              <Link href={'#'}>Careers</Link>\r\n              <Link href={'#'}>Contact Us</Link>\r\n              <Link href={'#'}>Partners</Link>\r\n            </Stack>\r\n            <Stack align={'flex-start'}>\r\n              <ListHeader>Legal</ListHeader>\r\n              <Link href={'#'}>Cookies Policy</Link>\r\n              <Link href={'#'}>Privacy Policy</Link>\r\n              <Link href={'#'}>Terms of Service</Link>\r\n              <Link href={'#'}>Law Enforcement</Link>\r\n              <Link href={'#'}>Status</Link>\r\n            </Stack>\r\n            <Stack align={'flex-start'}>\r\n              <ListHeader>Follow Us</ListHeader>\r\n              <Link href={'#'}>Facebook</Link>\r\n              <Link href={'#'}>Twitter</Link>\r\n              <Link href={'#'}>Dribbble</Link>\r\n              <Link href={'#'}>Instagram</Link>\r\n              <Link href={'#'}>LinkedIn</Link>\r\n            </Stack>\r\n          </SimpleGrid>\r\n        </Container>\r\n        <Box py={10}>\r\n          <Flex\r\n            align={'center'}\r\n            _before={{\r\n              content: '\"\"',\r\n              borderBottom: '1px solid',\r\n              borderColor: useColorModeValue('gray.200', 'gray.700'),\r\n              flexGrow: 1,\r\n              mr: 8,\r\n            }}\r\n            _after={{\r\n              content: '\"\"',\r\n              borderBottom: '1px solid',\r\n              borderColor: useColorModeValue('gray.200', 'gray.700'),\r\n              flexGrow: 1,\r\n              ml: 8,\r\n            }}>\r\n            <Logo />\r\n          </Flex>\r\n          <Text pt={6} fontSize={'sm'} textAlign={'center'}>\r\n            © {new Date().getFullYear()} Chakra Templates. All rights reserved\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Loader\\Loader.js",["442"],[],"import React from \"react\";\r\nimport { Spinner, Center, Box } from \"@chakra-ui/react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Box\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      left=\"0\"\r\n      width=\"100vw\"\r\n      height=\"100vh\"\r\n      backgroundColor=\"rgba(0,0,0,0.5)\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      zIndex=\"9999\"\r\n      backdropFilter=\"blur(3px)\"\r\n    >\r\n      <Spinner\r\n        thickness=\"4px\"\r\n        speed=\"0.65s\"\r\n        emptyColor=\"gray.200\"\r\n        color=\"blue.500\"\r\n        size=\"xl\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\modal\\ModalSuccessfulRegistration.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\navigation\\Navigation.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458"],[],"import {\r\n  Box,\r\n  Flex,\r\n  Avatar,\r\n  Link,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  useColorMode,\r\n  IconButton,\r\n  CloseButton,\r\n  Icon,\r\n  Drawer,\r\n  DrawerContent,\r\n  Text,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Button,\r\n  Divider,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  FiHome,\r\n  FiTrendingUp,\r\n  FiCompass,\r\n  FiStar,\r\n  FiSettings,\r\n  FiMenu,\r\n  FiBell,\r\n  FiChevronDown,\r\n  FiMessageCircle,\r\n  FiDollarSign,\r\n  FiUserCheck,\r\n  FiUsers,\r\n  FiSmile,\r\n  FiMoon,\r\n  FiSun,\r\n  FiHeart,\r\n  FiCalendar,\r\n  FiGlobe,\r\n} from \"react-icons/fi\";\r\n\r\nimport { BiUser } from \"react-icons/bi\";\r\n\r\nimport { IconType } from \"react-icons\";\r\nimport { ReactText } from \"react\";\r\n\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst LinkItems = [\r\n  { name: \"Home\", icon: FiHome, navigation: \"main\" },\r\n  { name: \"Admin\", icon: BiUser, navigation: \"admin\" },\r\n  { name: \"Analytics\", icon: FiTrendingUp, navigation: \"analytics\" },\r\n  { name: \"Manage Users\", icon: FiUsers, navigation: \"user-management\" },\r\n  { name: \"Manage Budget\", icon: FiDollarSign, navigation: \"budget-management\" },\r\n  { name: \"Compliances\", icon: FiUserCheck, navigation: \"compliance-management\" },\r\n  { name: \"Command Chat\", icon: FiMessageCircle, navigation: \"command-chat\" },\r\n  { name: \"Customer Support\", icon: FiSmile, navigation: \"customer-support\" },\r\n];\r\n\r\nconst Notifications = [\r\n  { user: \"User\", date: \"01.01.1980 at 12:00 AM\", text: \"Lorem ipsum\" },\r\n  { user: \"User 1\", date: \"01.01.1980 at 12:00 AM\", text: \"Lorem ipsum\" },\r\n  { user: \"User 2\", date: \"01.01.1980 at 12:00 AM\", text: \"Lorem ipsum\" },\r\n  { user: \"User 3\", date: \"01.01.1980 at 12:00 AM\", text: \"Lorem ipsum\" },\r\n];\r\n\r\nconst NavLink = ({ children }) => (\r\n  <Link\r\n    px={2}\r\n    py={1}\r\n    rounded={\"md\"}\r\n    _hover={{\r\n      textDecoration: \"none\",\r\n      bg: useColorModeValue(\"gray.200\", \"gray.700\"),\r\n    }}\r\n    href={\"#\"}\r\n  >\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nexport default function SidebarWithHeader({ children }) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <>\r\n      <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\r\n        <SidebarContent\r\n          onClose={() => onClose}\r\n          display={{ base: \"none\", md: \"block\" }}\r\n        />\r\n        <Drawer\r\n          autoFocus={false}\r\n          isOpen={isOpen}\r\n          placement=\"left\"\r\n          onClose={onClose}\r\n          returnFocusOnClose={false}\r\n          onOverlayClick={onClose}\r\n          size=\"full\"\r\n        >\r\n          <DrawerContent>\r\n            <SidebarContent onClose={onClose} />\r\n          </DrawerContent>\r\n        </Drawer>\r\n        {/* mobilenav */}\r\n        <MobileNav onOpen={onOpen} />\r\n        <Box ml={{ base: 0, md: 60 }} p=\"4\">\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SidebarContent = ({ onClose, ...rest }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Box\r\n      bg={useColorModeValue(\"white\", \"gray.900\")}\r\n      borderRight=\"1px\"\r\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n      w={{ base: \"full\", md: 60 }}\r\n      pos=\"fixed\"\r\n      h=\"full\"\r\n      {...rest}\r\n    >\r\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\r\n          Logo\r\n        </Text>\r\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\r\n      </Flex>\r\n      {LinkItems.map((link) => (\r\n        <NavItem onClick={() => navigate(\"/\" + link.navigation)} key={link.name} icon={link.icon}>\r\n          {link.name}\r\n        </NavItem>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst NavItem = ({ icon, children, ...rest }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Link\r\n      style={{ textDecoration: \"none\" }}\r\n      _focus={{ boxShadow: \"none\" }}\r\n    >\r\n      <Flex\r\n        align=\"center\"\r\n        p=\"4\"\r\n        mx=\"4\"\r\n        borderRadius=\"lg\"\r\n        role=\"group\"\r\n        cursor=\"pointer\"\r\n        _hover={{\r\n          bg: \"cyan.400\",\r\n          color: \"white\",\r\n        }}\r\n        {...rest}\r\n      >\r\n        {icon && (\r\n          <Icon\r\n            mr=\"4\"\r\n            fontSize=\"16\"\r\n            _groupHover={{\r\n              color: \"white\",\r\n            }}\r\n            as={icon}\r\n          />\r\n        )}\r\n        {children}\r\n      </Flex>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = ({ onOpen, ...rest }) => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const { isOpen, onClose } = useDisclosure();\r\n  return (\r\n    <Flex\r\n      ml={{ base: 0, md: 60 }}\r\n      px={{ base: 4, md: 4 }}\r\n      height=\"20\"\r\n      alignItems=\"center\"\r\n      bg={useColorModeValue(\"white\", \"gray.900\")}\r\n      borderBottomWidth=\"1px\"\r\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n      justifyContent={{ base: \"space-between\", md: \"flex-end\" }}\r\n      {...rest}\r\n    >\r\n      <IconButton\r\n        display={{ base: \"flex\", md: \"none\" }}\r\n        onClick={onOpen}\r\n        variant=\"outline\"\r\n        aria-label=\"open menu\"\r\n        icon={<FiMenu />}\r\n      />\r\n\r\n      <Text\r\n        display={{ base: \"flex\", md: \"none\" }}\r\n        fontSize=\"2xl\"\r\n        fontFamily=\"monospace\"\r\n        fontWeight=\"bold\"\r\n      >\r\n        Logo\r\n      </Text>\r\n\r\n      <HStack spacing={{ base: \"0\", md: \"6\" }}>\r\n        <IconButton\r\n          onClick={toggleColorMode}\r\n          size=\"lg\"\r\n          variant=\"ghost\"\r\n          aria-label=\"open menu\"\r\n        >\r\n          {colorMode === \"light\" ? <FiMoon /> : <FiSun />}\r\n        </IconButton>\r\n\r\n        <Menu>\r\n          <MenuButton\r\n            as={IconButton}\r\n            size=\"lg\"\r\n            variant=\"ghost\"\r\n            aria-label=\"open menu\"\r\n          >\r\n            <FiGlobe\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            />\r\n          </MenuButton>\r\n          <MenuList\r\n            width=\"200px\"\r\n            maxH=\"400px\"\r\n            overflow=\"auto\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n          >\r\n            <MenuItem>Ukrainian</MenuItem>\r\n            <MenuItem>Polish</MenuItem>\r\n            <MenuItem>English</MenuItem>\r\n            <MenuItem>German</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n\r\n        <Menu>\r\n          <MenuButton\r\n            as={IconButton}\r\n            size=\"lg\"\r\n            variant=\"ghost\"\r\n            aria-label=\"open menu\"\r\n          >\r\n            <FiBell\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            />\r\n          </MenuButton>\r\n          <MenuList\r\n            width=\"400px\"\r\n            maxH=\"400px\"\r\n            overflow=\"auto\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n          >\r\n            <Heading m={4} ml={6}>\r\n              Notifications\r\n            </Heading>\r\n            <Box mb={2} ml={6}>\r\n              <Heading size=\"md\">Choose filter</Heading>\r\n              <Box mt={2}>\r\n                <Button w=\"78.5px\" mr={2}>\r\n                  <FiBell />\r\n                </Button>\r\n                <Button w=\"78.5px\" mr={2}>\r\n                  <FiMessageCircle />\r\n                </Button>\r\n                <Button w=\"78.5px\" mr={2}>\r\n                  <FiHeart />\r\n                </Button>\r\n                <Button w=\"78.5px\" mr={2}>\r\n                  <FiCalendar />\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            <Divider />\r\n            {Notifications.map((notification, index) => (\r\n              <MenuItem key={index} mt={2}>\r\n                <Box>\r\n                  <Flex>\r\n                    <Avatar w=\"30px\" h=\"30px\" m={2} />\r\n                    <Heading size=\"lg\">{notification.user}</Heading>\r\n                  </Flex>\r\n                  <Text>{notification.date}</Text>\r\n                  <Text>{notification.text}</Text>\r\n                </Box>\r\n              </MenuItem>\r\n            ))}\r\n          </MenuList>\r\n        </Menu>\r\n\r\n        <Flex alignItems={\"center\"}>\r\n          <Menu>\r\n            <MenuButton\r\n              py={2}\r\n              transition=\"all 0.3s\"\r\n              _focus={{ boxShadow: \"none\" }}\r\n            >\r\n              <HStack>\r\n                <Avatar\r\n                  size={\"sm\"}\r\n                  src={\r\n                    \"https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9\"\r\n                  }\r\n                />\r\n                <VStack\r\n                  display={{ base: \"none\", md: \"flex\" }}\r\n                  alignItems=\"flex-start\"\r\n                  spacing=\"1px\"\r\n                  ml=\"2\"\r\n                >\r\n                  <Text fontSize=\"sm\">Justina Clark</Text>\r\n                  <Text fontSize=\"xs\" color=\"gray.600\">\r\n                    Admin\r\n                  </Text>\r\n                </VStack>\r\n                <Box display={{ base: \"none\", md: \"flex\" }}>\r\n                  <FiChevronDown />\r\n                </Box>\r\n              </HStack>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg={useColorModeValue(\"white\", \"gray.700\")}\r\n              borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n            >\r\n              <MenuItem>Profile</MenuItem>\r\n              <MenuItem>Settings</MenuItem>\r\n              <MenuItem>Billing</MenuItem>\r\n              <MenuDivider />\r\n              <MenuItem>Sign out</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\PopupError\\PopupError.js",["459","460","461","462","463","464","465"],[],"import React from \"react\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n  } from '@chakra-ui/react'\r\n\r\nconst PopupError = ({ show, onClose }) => {\r\n    if (!show) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup-error\">\r\n            <div className=\"popup-error-container\">\r\n                <header className=\"popup-error-header\">\r\n                    <h1 className=\"popup-error-title popup-error-text popup-error-header-element\">Error!</h1>\r\n                    <button \r\n                    onClick={onClose}\r\n                    className=\"popup-error-close-button popup-error-header-element popup-error-button\">⨯</button>\r\n                </header>\r\n                <div className=\"popup-error-body\">\r\n                    <p className=\"popup-error-description popup-error-text\">An issue occurred with user authentication.</p>\r\n                </div>\r\n                <footer className=\"popup-error-footer\">\r\n                    <button \r\n                    onClick={onClose}\r\n                    className=\"popup-error-ok-button popup-error-button\">Ok</button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupError;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\OAuthButtonGroup.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\PasswordField.js",["466"],[],"import {\r\n    FormControl,\r\n    FormLabel,\r\n    IconButton,\r\n    Input,\r\n    InputGroup,\r\n    InputProps,\r\n    InputRightElement,\r\n    useDisclosure,\r\n    useMergeRefs,\r\n  } from '@chakra-ui/react'\r\n  import { forwardRef, useRef } from 'react'\r\n  import { HiEye, HiEyeOff } from 'react-icons/hi'\r\n  \r\n  export const PasswordField = forwardRef((props, ref) => {\r\n    const { isOpen, onToggle } = useDisclosure();\r\n    const inputRef = useRef(null);\r\n  \r\n    const mergeRef = useMergeRefs(inputRef, ref)\r\n    const onClickReveal = () => {\r\n      onToggle()\r\n      if (inputRef.current) {\r\n        inputRef.current.focus({ preventScroll: true })\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <FormControl>\r\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n        <InputGroup>\r\n          <InputRightElement>\r\n            <IconButton\r\n              variant=\"link\"\r\n              aria-label={isOpen ? 'Mask password' : 'Reveal password'}\r\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\r\n              onClick={onClickReveal}\r\n            />\r\n          </InputRightElement>\r\n          <Input\r\n            id=\"password\"\r\n            ref={mergeRef}\r\n            name=\"password\"\r\n            type={isOpen ? 'text' : 'password'}\r\n            autoComplete=\"current-password\"\r\n            required\r\n            {...props}\r\n          />\r\n        </InputGroup>\r\n      </FormControl>\r\n    )\r\n  })\r\n  \r\n  PasswordField.displayName = 'PasswordField'","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\ProviderIcons.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\Logo.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\Feedback\\FeedbackCarousel.js",["467"],[],"import React from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  useBreakpointValue,\r\n  Stack,\r\n  Heading,\r\n  Text,\r\n  Container,\r\n} from '@chakra-ui/react';\r\n// Here we have used react-icons package for the icons\r\nimport { BiLeftArrowAlt, BiRightArrowAlt } from 'react-icons/bi';\r\n// And react-slick as our Carousel Lib\r\nimport Slider from 'react-slick';\r\n\r\n// Settings for the slider\r\nconst settings = {\r\n  dots: true,\r\n  arrows: false,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 500,\r\n  autoplaySpeed: 5000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nfunction FeedbackCarousel() {\r\n  // As we have used custom buttons, we need a reference variable to\r\n  // change the state\r\n  const [slider, setSlider] = React.useState<Slider | null>(null);\r\n\r\n  // These are the breakpoints which changes the position of the\r\n  // buttons as the screen size changes\r\n  const top = useBreakpointValue({ base: '90%', md: '50%' });\r\n  const side = useBreakpointValue({ base: '30%', md: '40px' });\r\n\r\n  // This list contains all the data for carousels\r\n  // This can be static or loaded from a server\r\n  const cards = [\r\n    {\r\n      title: 'Design Projects 1',\r\n      text:\r\n        \"The project board is an exclusive resource for contract work. It's perfect for freelancers, agencies, and moonlighters.\",\r\n      image:\r\n        'https://images.unsplash.com/photo-1516796181074-bf453fbfa3e6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDV8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60',\r\n    },\r\n    {\r\n      title: 'Design Projects 2',\r\n      text:\r\n        \"The project board is an exclusive resource for contract work. It's perfect for freelancers, agencies, and moonlighters.\",\r\n      image:\r\n        'https://images.unsplash.com/photo-1438183972690-6d4658e3290e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2274&q=80',\r\n    },\r\n    {\r\n      title: 'Design Projects 3',\r\n      text:\r\n        \"The project board is an exclusive resource for contract work. It's perfect for freelancers, agencies, and moonlighters.\",\r\n      image:\r\n        'https://images.unsplash.com/photo-1507237998874-b4d52d1dd655?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1yZWxhdGVkfDR8fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=900&q=60',\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Box\r\n      position={'relative'}\r\n      height={'600px'}\r\n      width={'full'}\r\n      overflow={'hidden'}>\r\n      {/* CSS files for react-slick */}\r\n      <link\r\n        rel=\"stylesheet\"\r\n        type=\"text/css\"\r\n        charSet=\"UTF-8\"\r\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\r\n      />\r\n      <link\r\n        rel=\"stylesheet\"\r\n        type=\"text/css\"\r\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\r\n      />\r\n      {/* Left Icon */}\r\n      <IconButton\r\n        aria-label=\"left-arrow\"\r\n        variant=\"ghost\"\r\n        position=\"absolute\"\r\n        left={side}\r\n        top={top}\r\n        transform={'translate(0%, -50%)'}\r\n        zIndex={2}\r\n        onClick={() => slider?.slickPrev()}>\r\n        <BiLeftArrowAlt size=\"40px\" />\r\n      </IconButton>\r\n      {/* Right Icon */}\r\n      <IconButton\r\n        aria-label=\"right-arrow\"\r\n        variant=\"ghost\"\r\n        position=\"absolute\"\r\n        right={side}\r\n        top={top}\r\n        transform={'translate(0%, -50%)'}\r\n        zIndex={2}\r\n        onClick={() => slider?.slickNext()}>\r\n        <BiRightArrowAlt size=\"40px\" />\r\n      </IconButton>\r\n      {/* Slider */}\r\n      <Slider {...settings} ref={(slider) => setSlider(slider)}>\r\n        {cards.map((card, index) => (\r\n          <Box\r\n            key={index}\r\n            height={'6xl'}\r\n            position=\"relative\"\r\n            backgroundPosition=\"center\"\r\n            backgroundRepeat=\"no-repeat\"\r\n            backgroundSize=\"cover\"\r\n            backgroundImage={`url(${card.image})`}>\r\n            {/* This is the block you need to change, to customize the caption */}\r\n            <Container size=\"container.lg\" height=\"600px\" position=\"relative\">\r\n              <Stack\r\n                spacing={6}\r\n                w={'full'}\r\n                maxW={'lg'}\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                transform=\"translate(0, -50%)\">\r\n                <Heading fontSize={{ base: '3xl', md: '4xl', lg: '5xl' }}>\r\n                  {card.title}\r\n                </Heading>\r\n                <Text fontSize={{ base: 'md', lg: 'lg' }} color=\"GrayText\">\r\n                  {card.text}\r\n                </Text>\r\n              </Stack>\r\n            </Container>\r\n          </Box>\r\n        ))}\r\n      </Slider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FeedbackCarousel;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\DragAndDropFile.js",["468","469","470"],[],"import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  useColorModeValue,\r\n  Icon,\r\n  useDisclosure,\r\n  Button,\r\n  useToast,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n  } from \"@chakra-ui/react\";\r\n  \r\nimport { FaFileUpload } from \"react-icons/fa\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nexport default function DropZone() {\r\n  const [files, setFiles] = useState([]);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const theme = useTheme();\r\n\r\n  const handleDrop = (acceptedFiles) => {\r\n    setFiles((prevFiles) => [...prevFiles, ...acceptedFiles]);\r\n  };\r\n\r\n  const removeFile = (file) => {\r\n    setFiles((prevFiles) => prevFiles.filter((f) => f !== file));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Here you can implement your file upload logic\r\n      // For example, you can use the FormData API to upload the files to a server\r\n      // and then display a success message using the toast function\r\n      toast({\r\n        title: \"Files uploaded successfully!\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error uploading files\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setFiles([]);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop: handleDrop,\r\n    multiple: true,\r\n  });\r\n\r\n  const borderColor = useColorModeValue(\"gray.300\", \"gray.600\");\r\n  const backgroundColor = useColorModeValue(\"gray.50\", \"gray.800\");\r\n  const textColor = useColorModeValue(\"gray.500\", \"gray.400\");\r\n\r\n  return (\r\n    <Box\r\n      p={6}\r\n      borderWidth=\"1px\"\r\n      borderStyle=\"dashed\"\r\n      borderColor={borderColor}\r\n      backgroundColor={backgroundColor}\r\n      color={textColor}\r\n      borderRadius=\"md\"\r\n      _hover={{\r\n        cursor: \"pointer\",\r\n      }}\r\n      {...getRootProps()}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Flex direction=\"column\" align=\"center\">\r\n        <Icon as={FaFileUpload} w={8} h={8} mb={2} />\r\n        {isDragActive ? (\r\n          <Text fontSize=\"lg\" fontWeight=\"medium\">\r\n            Drop your files here\r\n          </Text>\r\n        ) : (\r\n          <Text fontSize=\"lg\" fontWeight=\"medium\">\r\n            Drag and drop your files here, or{\" \"}\r\n            <Box as=\"span\" color={theme.colors.blue[500]}>\r\n              browse\r\n            </Box>{\" \"}\r\n            to select files\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n      {files.length > 0 && (\r\n        <Box mt={4}>\r\n          <Text fontSize=\"lg\" fontWeight=\"medium\" mb={2}>\r\n            Selected files\r\n          </Text>\r\n          <Box maxH=\"200px\" overflowY=\"auto\">\r\n            <Flex direction=\"column\" align=\"start\">\r\n              {files.map((file) => (\r\n                <Flex key={file.name} align=\"center\" mb={2}>\r\n                  <Box as=\"span\" mr={2}>\r\n                    {file.name} ({file.size}\r\n                    bytes)\r\n                  </Box>\r\n                  <Button size=\"sm\" onClick={() => removeFile(file)}>\r\n                    Remove\r\n                  </Button>\r\n                </Flex>\r\n              ))}\r\n            </Flex>\r\n          </Box>\r\n          <Button\r\n            mt={4}\r\n            colorScheme=\"blue\"\r\n            onClick={onOpen}\r\n            isDisabled={files.length === 0}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Upload files</ModalHeader>\r\n          <ModalBody>\r\n            <Text fontSize=\"lg\" fontWeight=\"medium\" mb={2}>\r\n              Selected files\r\n            </Text>\r\n            <Box maxH=\"200px\" overflowY=\"auto\">\r\n              <Flex direction=\"column\" align=\"start\">\r\n                {files.map((file) => (\r\n                  <Flex key={file.name} align=\"center\" mb={2}>\r\n                    <Box as=\"span\" mr={2}>\r\n                      {file.name} ({file.size} bytes)\r\n                    </Box>\r\n                    <Button size=\"sm\" onClick={() => removeFile(file)}>\r\n                      Remove\r\n                    </Button>\r\n                  </Flex>\r\n                ))}\r\n              </Flex>\r\n            </Box>\r\n            <Box mt={4} textAlign=\"center\">\r\n              {files.length > 0 && (\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  onClick={handleSubmit}\r\n                  isDisabled={files.length === 0}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              )}\r\n              {files.length === 0 && (\r\n                <Text fontSize=\"lg\" fontWeight=\"medium\">\r\n                  No files selected\r\n                </Text>\r\n              )}\r\n            </Box>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Registration\\UserFormHeader.js",["471","472","473","474","475","476","477","478","479","480","481","482","483"],[],"import { ReactNode } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Avatar,\r\n  Link,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon, ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NavLink = ({ children }) => (\r\n  <Link\r\n    px={2}\r\n    py={1}\r\n    rounded={\"md\"}\r\n    _hover={{\r\n      textDecoration: \"none\",\r\n      bg: useColorModeValue(\"gray.200\", \"gray.700\"),\r\n    }}\r\n    href={\"#\"}\r\n  >\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nexport default function UserFormHeader(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <>\r\n      <Box bg={useColorModeValue(\"gray.100\", \"gray.900\")} px={4}>\r\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n          <Box>\r\n          <Button\r\n          m={2}\r\n          onClick={() => navigate(props.link)}>\r\n            <ArrowBackIcon/>\r\n          </Button>\r\n          <Button \r\n          m={2}\r\n          onClick={toggleColorMode}>\r\n            {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          </Button>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\Group\\FailedAuthentication.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\LogIn\\ForgotPasswordPage.js",["484","485","486"],[],"import React from \"react\";\r\n\r\nimport Footer from \"../../Components/footer/Footer\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  HStack,\r\n  Input,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { FailedAuthentication } from \"./Group/FailedAuthentication\";\r\n\r\nimport UserFormHeader from \"../Registration/UserFormHeader\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  return (\r\n    <>\r\n      <UserFormHeader link=\"/login\" />\r\n      <Container\r\n        maxW=\"lg\"\r\n        py={{\r\n          base: \"12\",\r\n          md: \"24\",\r\n        }}\r\n        px={{\r\n          base: \"0\",\r\n          sm: \"8\",\r\n        }}\r\n      >\r\n        <Stack spacing=\"8\">\r\n          <Stack spacing=\"6\">\r\n            <Stack\r\n              spacing={{\r\n                base: \"2\",\r\n                md: \"3\",\r\n              }}\r\n              textAlign=\"center\"\r\n            >\r\n              <Heading\r\n                size={{\r\n                  base: \"xs\",\r\n                  md: \"sm\",\r\n                }}\r\n              >\r\n                Forgot password\r\n              </Heading>\r\n              <HStack spacing=\"1\" justify=\"center\">\r\n                <Text color=\"muted\">\r\n                  Write down your e-mail to receive recovery code\r\n                </Text>\r\n              </HStack>\r\n            </Stack>\r\n          </Stack>\r\n          <Box\r\n            py={{\r\n              base: \"0\",\r\n              sm: \"8\",\r\n            }}\r\n            px={{\r\n              base: \"4\",\r\n              sm: \"10\",\r\n            }}\r\n            bg={{\r\n              base: \"transparent\",\r\n              sm: \"bg-surface\",\r\n            }}\r\n            boxShadow={{\r\n              base: \"none\",\r\n              sm: \"md\",\r\n            }}\r\n            borderRadius={{\r\n              base: \"none\",\r\n              sm: \"xl\",\r\n            }}\r\n          >\r\n            <Stack spacing=\"6\">\r\n              <Stack spacing=\"5\">\r\n                <FormControl>\r\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                  <Input id=\"email\" type=\"email\" />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack spacing=\"6\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  bg={\"blue.400\"}\r\n                  color={\"white\"}\r\n                  w=\"full\"\r\n                  _hover={{\r\n                    bg: \"blue.500\",\r\n                  }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </Stack>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ErrorPages\\ServerUnavailable.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\PriceList\\PriceList.js",["487","488","489"],[],"import React from \"react\";\r\n\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Flex,\r\n  Grid,\r\n  GridItem,\r\n  Text,\r\n  Heading,\r\n  useColorMode,\r\n  Card,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction PriceList() {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box mt={10} mx=\"auto\" maxW=\"1200px\">\r\n      <Grid\r\n        templateColumns={[\"1fr\", \"1fr 1fr\", \"1fr 1fr 1fr\"]}\r\n        gap={6}\r\n        bg={colorMode === \"dark\" ? \"gray.800\" : \"white\"}\r\n        p={4}\r\n        rounded=\"md\"\r\n      >\r\n        <GridItem>\r\n          <PriceItem\r\n            title=\"Basic\"\r\n            price=\"$9.99/month\"\r\n            features={[\"Feature 1\", \"Feature 2\", \"Feature 3\"]}\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <PriceItem\r\n            title=\"Pro\"\r\n            price=\"$19.99/month\"\r\n            features={[\"Feature 1\", \"Feature 2\", \"Feature 3\", \"Feature 4\"]}\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <PriceItem\r\n            title=\"Premium\"\r\n            price=\"$29.99/month\"\r\n            features={[\r\n              \"Feature 1\",\r\n              \"Feature 2\",\r\n              \"Feature 3\",\r\n              \"Feature 4\",\r\n              \"Feature 5\",\r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction PriceItem({ title, price, features }) {\r\n  return (\r\n    <Card p={4} rounded=\"md\" padding={10} height=\"350\">\r\n      <Text fontSize=\"xl\" fontWeight=\"bold\" mb={2}>\r\n        {title}\r\n      </Text>\r\n      <Text fontSize=\"2xl\" fontWeight=\"bold\" mb={4}>\r\n        {price}\r\n      </Text>\r\n      <ul>\r\n        {features.map((feature, index) => (\r\n          <li key={index}>{feature}</li>\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PriceList;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ChannelDashboard\\ChannelDashboard.js",["490","491","492","493","494","495","496"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Icon,\r\n  Flex,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  RangeSlider,\r\n  RangeSliderTrack,\r\n  RangeSliderFilledTrack,\r\n  RangeSliderThumb,\r\n  Text,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n  VStack,\r\n  Divider,\r\n  Card,\r\n  CardBody,\r\n  Switch,\r\n  useDisclosure,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Footer from \"../../Components/footer/Footer\";\r\n\r\nimport { FaStar, FaGem, FaShieldAlt } from \"react-icons/fa\";\r\n\r\nimport { SearchIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport StartPageHeader from \"../Start/Components/StartPageHeader/StartPageHeader\";\r\n\r\nconst ChannelDashboard = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const toggleButtons = [\r\n    {\r\n      id: 1,\r\n      name: \"Exclusive\",\r\n      icon: <FaGem />,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Trusted\",\r\n      icon: <FaShieldAlt />,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Verified\",\r\n      icon: <FaStar />,\r\n    },\r\n  ];\r\n  const [toggleState, setToggleState] = useState({});\r\n\r\n  const handleToggle = (id) => {\r\n    setToggleState((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id],\r\n    }));\r\n  };\r\n\r\n  {\r\n    /* Types */\r\n  }\r\n  const types = [];\r\n\r\n  for (let i = 1; i <= 15; i++) {\r\n    types.push({\r\n      id: i,\r\n      name: `Name ${i}`,\r\n    });\r\n  }\r\n\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      name: \"Item 1\",\r\n      description: \"Description 1\",\r\n      category: \"Category 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Item 2\",\r\n      description: \"Description 2\",\r\n      category: \"Category 2\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n  ];\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const filteredItems = items.filter((item) =>\r\n    item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StartPageHeader />\r\n      <Heading mt=\"2em\" textAlign=\"center\">\r\n        Channel Board\r\n      </Heading>\r\n      <Center>\r\n      <Box  display=\"flex\" flexDirection=\"row\" padding={75}>\r\n        <Box borderRadius=\"1em\" p=\"2em\" w=\"500px\" backgroundColor=\"gray.700\">\r\n          <Heading>Filters</Heading>\r\n          <InputGroup size=\"md\" width={300} mt={6}>\r\n            <Input pr=\"4.5rem\" placeholder=\"Search...\" />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button h=\"1.75rem\" size=\"sm\">\r\n                <SearchIcon />\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              rightIcon={<ChevronDownIcon />}\r\n              mt={6}\r\n              width=\"300px\"\r\n              textAlign=\"left\"\r\n            >\r\n              All themes\r\n            </MenuButton>\r\n\r\n            <MenuList zIndex={1000} overflowY=\"auto\" maxH=\"300px\">\r\n              <Box>\r\n                <InputGroup size=\"md\" width=\"250px\" m={4}>\r\n                  <Input pr=\"4.5rem\" placeholder=\"Basic usage\" />\r\n                  <InputRightElement width=\"4.5rem\">\r\n                    <Button h=\"1.75rem\" size=\"sm\">\r\n                      <SearchIcon />\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </Box>\r\n              {types.map((type) => (\r\n                <MenuItem key={type.id}>{type.name}</MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n\r\n          <Box mt={10}>\r\n            <Heading>Tags</Heading>\r\n            <Box mt={6}>\r\n              <Flex align=\"center\">\r\n                {toggleButtons.map((button) => (\r\n                  <Button\r\n                    mr=\"6px\"\r\n                    key={button.id}\r\n                    onClick={() => handleToggle(button.id)}\r\n                    colorScheme={toggleState[button.id] ? \"teal\" : \"gray\"}\r\n                    variant={toggleState[button.id] ? \"solid\" : \"outline\"}\r\n                  >\r\n                    {button.icon}\r\n                  </Button>\r\n                ))}\r\n              </Flex>\r\n            </Box>\r\n          </Box>\r\n          <Box maxW=\"400px\" mt={6}>\r\n            <Accordion allowToggle>\r\n              <AccordionItem>\r\n                <h2>\r\n                  <AccordionButton>\r\n                    <Box as=\"span\" flex=\"1\" textAlign=\"left\">\r\n                      Section 1 title\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </h2>\r\n                <AccordionPanel\r\n                  _expanded={{\r\n                    width: \"100px\",\r\n                  }}\r\n                  pb={4}\r\n                >\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                  laboris nisi ut aliquip ex ea commodo consequat.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n\r\n              <AccordionItem>\r\n                <h2>\r\n                  <AccordionButton>\r\n                    <Box as=\"span\" flex=\"1\" textAlign=\"left\">\r\n                      Section 2 title\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </h2>\r\n                <AccordionPanel pb={4}>\r\n                  <Box>\r\n                    <Text>ER, %</Text>\r\n                    <RangeSlider\r\n                      defaultValue={[0, 10000]}\r\n                      min={0}\r\n                      max={10000}\r\n                      step={10}\r\n                    >\r\n                      <RangeSliderTrack bg=\"red.100\">\r\n                        <RangeSliderFilledTrack bg=\"tomato\" />\r\n                      </RangeSliderTrack>\r\n                      <RangeSliderThumb boxSize={6} index={0} />\r\n                      <RangeSliderThumb boxSize={6} index={1} />\r\n                    </RangeSlider>\r\n                    <Flex>\r\n                      <Input />\r\n                      <Input />\r\n                    </Flex>\r\n                  </Box>\r\n                  <Box>\r\n                    <Text>Subscribers</Text>\r\n                    <RangeSlider\r\n                      defaultValue={[0, 10000]}\r\n                      min={0}\r\n                      max={10000}\r\n                      step={10}\r\n                    >\r\n                      <RangeSliderTrack bg=\"red.100\">\r\n                        <RangeSliderFilledTrack bg=\"tomato\" />\r\n                      </RangeSliderTrack>\r\n                      <RangeSliderThumb boxSize={6} index={0} />\r\n                      <RangeSliderThumb boxSize={6} index={1} />\r\n                    </RangeSlider>\r\n                    <Flex>\r\n                      <Input />\r\n                      <Input />\r\n                    </Flex>\r\n                  </Box>\r\n                  <Box>\r\n                    <Text>CPV</Text>\r\n                    <RangeSlider\r\n                      defaultValue={[0, 10000]}\r\n                      min={0}\r\n                      max={10000}\r\n                      step={10}\r\n                    >\r\n                      <RangeSliderTrack bg=\"red.100\">\r\n                        <RangeSliderFilledTrack bg=\"tomato\" />\r\n                      </RangeSliderTrack>\r\n                      <RangeSliderThumb boxSize={6} index={0} />\r\n                      <RangeSliderThumb boxSize={6} index={1} />\r\n                    </RangeSlider>\r\n                    <Flex>\r\n                      <Input />\r\n                      <Input />\r\n                    </Flex>\r\n                  </Box>\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n\r\n              <AccordionItem>\r\n                <h2>\r\n                  <AccordionButton>\r\n                    <Box as=\"span\" flex=\"1\" textAlign=\"left\">\r\n                      Section 1 title\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </h2>\r\n                <AccordionPanel\r\n                  _expanded={{\r\n                    width: \"100px\",\r\n                  }}\r\n                  pb={4}\r\n                >\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                  laboris nisi ut aliquip ex ea commodo consequat.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Box>\r\n        </Box>\r\n        <Box width=\"65%\" padding=\"4\" overflowX=\"auto\" maxH=\"700px\">\r\n          <List spacing={3}>\r\n            {items.map((item) => (\r\n              <ListItem key={item.id} display=\"flex\" alignItems=\"center\">\r\n                <Card>\r\n                  <CardBody>\r\n                    <Box display=\"flex\" alignItems=\"center\" marginRight=\"4\">\r\n                      <Box marginRight=\"4\">\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"column\"\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <Box>\r\n                            <Icon />\r\n                          </Box>\r\n                          <Divider orientation=\"vertical\" />\r\n                          <Box>\r\n                            <Icon />\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box>\r\n                        <Text>{item.name}</Text>\r\n                        <Divider\r\n                          marginTop=\"2\"\r\n                          marginBottom=\"2\"\r\n                          orientation=\"vertical\"\r\n                        />\r\n                        <Box>\r\n                          <Text>{item.description}</Text>\r\n                          <Text>{item.category}</Text>\r\n                        </Box>\r\n                      </Box>\r\n                      <Divider orientation=\"vertical\" />\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                    </Box>\r\n                  </CardBody>\r\n                </Card>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n      </Center>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelDashboard;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Admin\\Components\\AdminMainContent.js",["497","498","499","500"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../../Components/footer/Footer\";\r\nimport AdvertisementList from \"../../../Components/Entities/Advertisement/AdvertisementList\";\r\nimport OnlineUserList from \"../../../Components/Entities/User/OnlineUserList\";\r\nimport TaskList from \"../../../Components/Entities/Task/TaskList\";\r\nimport axios from \"axios\";\r\nimport ActionLogList from \"../../../Components/Entities/ActionLog/ActionLogList\";\r\n\r\nconst AdminMainContent = () => {\r\n  const [advertisementData, setAdvertisementData] = useState([]);\r\n  const [onlineUserData, setOnlineUserData] = useState([]);\r\n  const [taskData, setTaskData] = useState([]);\r\n  const [recentActionsData, setRecentActionsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        {\r\n          /* Fetch advertisements */\r\n        }\r\n        const advertisements = await axios.get(\r\n          \"https://localhost:50555/AdvertisementController/advertisements\"\r\n        );\r\n        if (advertisements.status === 200) {\r\n          setAdvertisementData(advertisements);\r\n        } else {\r\n          console.error(\"Error occurred: \", advertisements.statusText);\r\n        }\r\n\r\n        {\r\n          /* Fetch online users */\r\n        }\r\n        const onlineUsers = await axios.get(\r\n          \"https://localhost:50555/UserController/users/onlineUsers\"\r\n        );\r\n        if (onlineUsers.status === 200) {\r\n          setOnlineUserData(onlineUsers);\r\n        } else {\r\n          console.error(\"Error occurred: \", onlineUsers.statusText);\r\n        }\r\n\r\n        {\r\n          /* Fetch tasks */\r\n        }\r\n        const tasks = await axios.get(\r\n          \"https://localhost:50555/TaskController/tasks\"\r\n        );\r\n        if (tasks.status === 200) {\r\n          setTaskData(tasks);\r\n        } else {\r\n          console.error(\"Error occurred: \", tasks.statusText);\r\n        }\r\n\r\n        {\r\n          /* Fetch recent actions */\r\n        }\r\n        const recentActions = await axios.get(\r\n          \"https://localhost:50555/RecentActions/actions\"\r\n        );\r\n        if (recentActions.status === 200) {\r\n          setRecentActionsData(recentActions);\r\n        } else {\r\n          console.error(\"Error occurred: \", recentActions.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AdvertisementList ads={advertisementData} />\r\n      <OnlineUserList onlineUsers={onlineUserData} />\r\n      <TaskList tasks={taskData} />\r\n      <ActionLogList recentActions={recentActionsData} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMainContent;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Start\\Components\\HotOffers\\HotOffers.js",["501"],[],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  List,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  ListItem,\r\n  Icon,\r\n  Divider,\r\n  Text,\r\n  Heading,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst HotOffers = () => {\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      name: \"Item 1\",\r\n      description: \"Description 1\",\r\n      category: \"Category 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Item 2\",\r\n      description: \"Description 2\",\r\n      category: \"Category 2\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Item 3\",\r\n      description: \"Description 3\",\r\n      category: \"Category 3\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Center pb=\"4em\" backgroundColor=\"blue\">\r\n      <Box mt=\"4em\">\r\n        <Heading color=\"white\" textAlign=\"center\" mb=\"1em\">\r\n          Hot Offers\r\n        </Heading>\r\n        <Box>\r\n          <List spacing={3}>\r\n            {items.map((item) => (\r\n              <ListItem key={item.id} display=\"flex\" alignItems=\"center\">\r\n                <Card>\r\n                  <CardBody>\r\n                    <Box display=\"flex\" alignItems=\"center\" marginRight=\"4\">\r\n                      <Box marginRight=\"4\">\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"column\"\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <Box>\r\n                            <Icon />\r\n                          </Box>\r\n                          <Divider orientation=\"vertical\" />\r\n                          <Box>\r\n                            <Icon />\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box>\r\n                        <Text>{item.name}</Text>\r\n                        <Divider\r\n                          marginTop=\"2\"\r\n                          marginBottom=\"2\"\r\n                          orientation=\"vertical\"\r\n                        />\r\n                        <Box>\r\n                          <Text>{item.description}</Text>\r\n                          <Text>{item.category}</Text>\r\n                        </Box>\r\n                      </Box>\r\n                      <Divider orientation=\"vertical\" />\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                      <Box ml={10}>\r\n                        <Text>Example 1</Text>\r\n                        <Text>Example 2</Text>\r\n                        <Text>Example 3</Text>\r\n                      </Box>\r\n                    </Box>\r\n                  </CardBody>\r\n                </Card>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default HotOffers;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Advertisement\\Advertisement.js",["502","503","504","505","506","507","508","509","510","511"],[],"import React, { useState } from \"react\";\r\n// Chakra imports\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  Icon,\r\n  Image,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport { MdTimer, MdVideoLibrary } from \"react-icons/md\";\r\nimport { IoEllipsisHorizontalSharp } from \"react-icons/io5\";\r\n\r\nconst Advertisement = ({ ad, onOpenModal }, props) => {\r\n  {\r\n    /* Props of Advertisement entity */\r\n  }\r\n  const name = useState(\"\");\r\n  const topic = useState(\"\");\r\n  const description = useState(\"\");\r\n  const price = useState(0.0);\r\n  const datePosted = useState(null);\r\n  const userEntity = useState(null);\r\n  const channelType = useState(null);\r\n\r\n  {\r\n    /* Color mode values */\r\n  }\r\n  const boxBg = useColorModeValue(\"white !important\", \"#111c44 !important\");\r\n  const secondaryBg = useColorModeValue(\"gray.50\", \"whiteAlpha.100\");\r\n  const mainText = useColorModeValue(\"gray.800\", \"white\");\r\n  const iconBox = useColorModeValue(\"gray.100\", \"whiteAlpha.200\");\r\n  const iconColor = useColorModeValue(\"brand.200\", \"white\");\r\n\r\n  const handleClick = () => {\r\n    onOpenModal(ad);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      borderRadius=\"20px\"\r\n      bg={boxBg}\r\n      h=\"345px\"\r\n      w={{ base: \"315px\", md: \"345px\" }}\r\n      direction=\"column\"\r\n    >\r\n      <Box p=\"20px\">\r\n        <Flex w=\"100%\" mb=\"10px\">\r\n          <Image src=\"https://i.ibb.co/ZWxRPRq/Venus-Logo.png\" me=\"auto\" />\r\n          <Button\r\n            w=\"38px\"\r\n            h=\"38px\"\r\n            align=\"center\"\r\n            justify=\"center\"\r\n            borderRadius=\"12px\"\r\n            me=\"12px\"\r\n            bg={iconBox}\r\n            onClick={handleClick}\r\n            cursor=\"pointer\"\r\n          >\r\n            <Icon\r\n              w=\"24px\"\r\n              h=\"24px\"\r\n              as={IoEllipsisHorizontalSharp}\r\n              color={iconColor}\r\n            />\r\n          </Button>\r\n        </Flex>\r\n        <Box>\r\n          <Text fontWeight=\"600\" color={mainText} w=\"100%\" fontSize=\"2xl\">\r\n            {props.name}\r\n          </Text>\r\n          <Box>\r\n            <Avatar src=\"https://i.ibb.co/CmxNdhQ/avatar1.png\" />\r\n            <Text>{props.userEntity}</Text>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Flex\r\n        bg={secondaryBg}\r\n        w=\"100%\"\r\n        p=\"20px\"\r\n        borderBottomLeftRadius=\"inherit\"\r\n        borderBottomRightRadius=\"inherit\"\r\n        height=\"100%\"\r\n        direction=\"column\"\r\n      >\r\n        <Text\r\n          fontSize=\"sm\"\r\n          color=\"gray.500\"\r\n          lineHeight=\"24px\"\r\n          pe=\"40px\"\r\n          fontWeight=\"500\"\r\n          mb=\"auto\"\r\n        >\r\n          You have the opportunity to play this game of life you need to\r\n          appreciate every moment.\r\n        </Text>\r\n        <Flex>\r\n          <Flex me=\"25px\">\r\n            <Icon as={MdTimer} w=\"20px\" h=\"20px\" me=\"6px\" color=\"green.400\" />\r\n            <Text color={mainText} fontSize=\"sm\" my=\"auto\" fontWeight=\"500\">\r\n              85 mins\r\n            </Text>\r\n          </Flex>\r\n          <Flex>\r\n            <Icon\r\n              as={MdVideoLibrary}\r\n              w=\"20px\"\r\n              h=\"20px\"\r\n              me=\"6px\"\r\n              color=\"red.500\"\r\n            />\r\n            <Text color={mainText} fontSize=\"sm\" my=\"auto\" fontWeight=\"500\">\r\n              Video Format\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Advertisement;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\User\\User.js",["512","513","514"],[],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  Button,\r\n  Avatar,\r\n  Flex,\r\n  Text,\r\n  useColorModeValue,\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { FiMoreHorizontal, FiMessageCircle } from \"react-icons/fi\";\r\n\r\nconst User = ({ user, onOpenModal, ...props}) => {\r\n  const blocks = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  let boxBg = useColorModeValue(\"white !important\", \"#111c44 !important\");\r\n  \r\n  const handleClick = () => {\r\n    onOpenModal(user);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      bg={boxBg}\r\n      width=\"22em\"\r\n      height=\"100px\"\r\n      borderRadius=\"md\"\r\n      p={4}\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      <Flex alignItems=\"center\">\r\n        <Avatar name={props.name} src={props.avatarUrl} size=\"md\" />\r\n        <Box ml={4}>\r\n          <Heading size=\"md\" mb={2}>Username</Heading>\r\n          <Text fontSize=\"xs\">Online</Text>\r\n        </Box>\r\n      </Flex>\r\n      <Button colorScheme=\"gray\" onClick={handleClick}>\r\n        <FiMoreHorizontal />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Task\\TaskList.js",["515","516","517","518","519","520","521","522"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Text,\r\n  Divider,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport Task, { TaskModal } from \"./Task\";\r\n\r\nconst TaskList = ({ tasks }) => {\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  const handleOpenModal = (inputTask) => {\r\n    setSelectedTask(inputTask);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  return (\r\n    <Box p=\"2em\">\r\n      <Box>\r\n        <Heading mb=\"1em\">Task List</Heading>\r\n\r\n        {tasks.length > 0 ? (\r\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n            {tasks.map((block) => (\r\n              <Task \r\n                key={block} \r\n                task={block} \r\n                onOpenModal={handleOpenModal} \r\n              />\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <Box textAlign=\"center\" mt=\"2em\">\r\n            <Heading>No data</Heading>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {tasks.length > 0 ? (\r\n        <Center>\r\n          <Button mt=\"2em\" colorScheme=\"blue\">\r\n            Show all tasks\r\n          </Button>\r\n        </Center>\r\n      ) : (\r\n        <Center>\r\n          <Button mt=\"2em\" colorScheme=\"blue\">\r\n            Refresh\r\n          </Button>\r\n        </Center>\r\n      )}\r\n\r\n      {selectedTask && (\r\n        <TaskModal\r\n          isOpen={selectedTask !== null}\r\n          onClose={handleCloseModal}\r\n          task={selectedTask}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\User\\OnlineUserList.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Advertisement\\AdvertisementList.js",["523","524"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Text,\r\n  Divider,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport Advertisement from \"./Advertisement\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport translationUKR from \"../../locales/ukr/translation.json\";\r\n\r\nconst AdvertisementList = ({ ads }) => {\r\n  const { t } = useTranslation();\r\n  const [selectedAd, setSelectedAd] = useState(null);\r\n\r\n  const handleOpenModal = (ad) => {\r\n    setSelectedAd(ad);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedAd(null);\r\n  };\r\n\r\n  return (\r\n    <Box p=\"2em\">\r\n      <Box>\r\n        <Heading mb=\"1em\">Advertisements</Heading>\r\n        {ads.length > 0 ? (\r\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n            {ads.slice(0, 6).map((block) => (\r\n              <Advertisement\r\n                key={block}\r\n                ad={block}\r\n                onOpenModal={handleOpenModal}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <Box textAlign=\"center\" mt=\"2em\">\r\n            <Heading>No data</Heading>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      {selectedAd && (\r\n        <Modal isOpen={selectedAd !== null} onClose={handleCloseModal}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Header</ModalHeader>\r\n            <Divider />\r\n            <ModalBody>\r\n              <Box>\r\n                <Heading>Description</Heading>\r\n                <Text>Lorem ipsum.</Text>\r\n              </Box>\r\n              <Divider />\r\n              <Box>\r\n                <Heading>Price</Heading>\r\n                <Text>Price</Text>\r\n              </Box>\r\n              <Divider />\r\n              <Box>\r\n                <Heading>Example</Heading>\r\n                <Text>Location</Text>\r\n              </Box>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button mr={2} colorScheme=\"yellow\" onClick={handleCloseModal}>\r\n                Edit\r\n              </Button>\r\n              <Button mr={2} colorScheme=\"red\" onClick={handleCloseModal}>\r\n                Delete\r\n              </Button>\r\n              <Button mr={2} colorScheme=\"blue\" onClick={handleCloseModal}>\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n      {ads.length > 0 ? (\r\n        <Center>\r\n          <Button colorScheme=\"blue\" mt={10}>\r\n            Show more\r\n          </Button>\r\n        </Center>\r\n      ) : (\r\n        <Center>\r\n          <Button colorScheme=\"blue\" mt={10}>\r\n            Refresh\r\n          </Button>\r\n        </Center>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdvertisementList;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\ViberChannels\\ViberChannelsPage.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\WhatsAppChannels\\WhatsAppChannelsPage.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\TelegramChannels\\TelegramChannelsPage.js",["525"],[],"import React from \"react\";\r\n\r\n\r\nconst TelegramChannelsPage = () => {\r\n\r\n}\r\n\r\nexport default TelegramChannelsPage;","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Admin\\AdminPage.js",["526","527"],[],"import React from \"react\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport AdvertisementList from \"../../Components/Entities/Advertisement/AdvertisementList\";\r\nimport SidebarWithHeader from \"../../Components/navigation/Navigation\";\r\nimport AdminMainContent from \"./Components/AdminMainContent\";\r\n\r\nconst AdminPage = () => {\r\n\r\n  return (\r\n      <>\r\n      <SidebarWithHeader children={<AdminMainContent/>}/>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\RequireCredentialsPage.js",["528","529","530","531","532"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  HStack,\r\n  Input,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\n\r\nimport { OAuthButtonGroup } from \"./Group/OAuthButtonGroup\";\r\nimport { PasswordField } from \"./Group/PasswordField\";\r\nimport { Logo } from \"./Group/Logo\";\r\n\r\nimport UserFormHeader from \"../Registration/UserFormHeader\";\r\nimport { FailedAuthentication } from \"../LogIn/Group/FailedAuthentication\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\n\r\nconst RequireCredentialsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://localhost:50555/api/UserAccount/login\", data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setLoading(false);\r\n        const navigationLink = '/admin/' + response.data.id\r\n        navigate(navigationLink);\r\n      })\r\n      .catch((error) => {\r\n        setLoginError(true);\r\n        console.error(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserFormHeader link=\"/main\" />\r\n      <Container\r\n        maxW=\"lg\"\r\n        py={{\r\n          base: \"12\",\r\n          md: \"24\",\r\n        }}\r\n        px={{\r\n          base: \"0\",\r\n          sm: \"8\",\r\n        }}\r\n      >\r\n        {loginError && <FailedAuthentication />}\r\n        <Stack spacing=\"8\">\r\n          <Stack spacing=\"6\">\r\n            <Logo />\r\n            <Stack\r\n              spacing={{\r\n                base: \"2\",\r\n                md: \"3\",\r\n              }}\r\n              textAlign=\"center\"\r\n            >\r\n              <Heading\r\n                size={{\r\n                  base: \"xs\",\r\n                  md: \"sm\",\r\n                }}\r\n              >\r\n                Log in to your account\r\n              </Heading>\r\n            </Stack>\r\n          </Stack>\r\n          <Box\r\n            py={{\r\n              base: \"0\",\r\n              sm: \"8\",\r\n            }}\r\n            px={{\r\n              base: \"4\",\r\n              sm: \"10\",\r\n            }}\r\n            bg={{\r\n              base: \"transparent\",\r\n              sm: \"bg-surface\",\r\n            }}\r\n            boxShadow={{\r\n              base: \"none\",\r\n              sm: \"md\",\r\n            }}\r\n            borderRadius={{\r\n              base: \"none\",\r\n              sm: \"xl\",\r\n            }}\r\n          >\r\n            <Stack spacing=\"6\">\r\n              <Stack spacing=\"5\">\r\n                <FormControl onSubmit={handleSubmit}>\r\n                  <FormLabel htmlFor=\"username\">Username</FormLabel>\r\n                  <Input\r\n                    id=\"username\"\r\n                    value={username}\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    type=\"username\"\r\n                  />\r\n                </FormControl>\r\n                <PasswordField\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  type=\"password\"\r\n                />\r\n              </Stack>\r\n              <Stack spacing=\"6\">\r\n                <Button\r\n                  onClick={() => handleSubmit()}\r\n                  type=\"submit\"\r\n                  bg={\"blue.400\"}\r\n                  color={\"white\"}\r\n                  w=\"full\"\r\n                  _hover={{\r\n                    bg: \"blue.500\",\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </Stack>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n        {loading && <Loader />}\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequireCredentialsPage;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\Logo.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\PasswordField.js",["533"],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\OAuthButtonGroup.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\RequireCredentials\\Group\\ProviderIcons.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\PublicationsPage.js",["534","535"],[],"import React from \"react\";\r\nimport PublicationSidebar from \"./Components/PublicationSidebar\";\r\nimport PublicationFeed from \"./Components/PublicationFeed\";\r\nimport Footer from \"../../Components/footer/Footer\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\n\r\nconst PublicationsPage = () => {\r\n  return (\r\n    <>\r\n      <PublicationFeed />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicationsPage;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\Components\\PublicationSidebar.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\ActionLog\\ActionLogList.js",["536","537","538","539"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n  Button,\r\n  Center,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport ActionLog from \"./ActionLog\";\r\n\r\nconst ActionLogList = ({ recentActions }) => {\r\n  const [selectedAction, setSelectedAction] = useState(null);\r\n  const tableBgColor = useColorModeValue(\"gray.200\", \"gray.700\");\r\n  const cellBgColor = useColorModeValue(\"gray.300\", \"gray.600\");\r\n\r\n  const handleOpenModal = (recentAction) => {\r\n    setSelectedAction(recentAction);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedAction(null);\r\n  };\r\n\r\n  return (\r\n    <Box p=\"2em\">\r\n      <Heading>Recent Actions</Heading>\r\n      <TableContainer\r\n        p=\"1em\"\r\n        backgroundColor={tableBgColor}\r\n        mt=\"2em\"\r\n        borderRadius=\"1em\"\r\n      >\r\n        <Table variant=\"simple\">\r\n          <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Action</Th>\r\n              <Th>User</Th>\r\n              <Th>Date</Th>\r\n            </Tr>\r\n          </Thead>\r\n          {recentActions.length > 0 ? (\r\n            <Tbody>\r\n              {recentActions.map((action) => (\r\n                <ActionLog\r\n                  key={action.id}\r\n                  id={action.id}\r\n                  name={action.name}\r\n                  description={action.description}\r\n                  conductedByUser={action.conductedByUser}\r\n                  timestamp={action.timestamp}\r\n                />\r\n              ))}\r\n            </Tbody>\r\n          ) : (\r\n            <Tbody>\r\n              <Tr>\r\n                <Td\r\n                  colSpan={3}\r\n                  borderTopRadius=\"10px\"\r\n                  borderBottomRadius=\"10px\"\r\n                  backgroundColor={cellBgColor}\r\n                >\r\n                  No data\r\n                </Td>\r\n              </Tr>\r\n            </Tbody>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n      {recentActions.length > 0 ? null : (\r\n        <Center>\r\n          <Button colorScheme=\"blue\" mt=\"2em\">\r\n            Refresh\r\n          </Button>\r\n        </Center>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const ActionLogModal = ({ isOpen, onClose, task }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>{task.name}</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>{/* Add content here for the task modal */}</ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionLogList;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Task\\Task.js",["540","541","542","543"],[],"import React from \"react\";\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  Icon,\r\n  Image,\r\n  Text,\r\n  useColorModeValue,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { IoEllipsisHorizontalSharp } from \"react-icons/io5\";\r\nimport { MdTimer, MdVideoLibrary } from \"react-icons/md\";\r\nimport { BiCalendar, BiLabel } from \"react-icons/bi\";\r\n\r\n{\r\n  /* \r\n  Task:\r\n  - Id\r\n  - Name\r\n  - Topic\r\n  - Description\r\n  - Status\r\n  - Priority\r\n  - Due Date\r\n  - Created At\r\n  - Assigned To\r\n  - Tags\r\n  - Comments\r\n*/\r\n}\r\n\r\nconst Task = ({ task, onOpenModal }, props) => {\r\n  const boxBg = useColorModeValue(\"white !important\", \"#111c44 !important\");\r\n  const secondaryBg = useColorModeValue(\"gray.50\", \"whiteAlpha.100\");\r\n  const mainText = useColorModeValue(\"gray.800\", \"white\");\r\n  const iconBox = useColorModeValue(\"gray.100\", \"whiteAlpha.200\");\r\n  const iconColor = useColorModeValue(\"brand.200\", \"white\");\r\n\r\n  const handleClick = () => {\r\n    onOpenModal(task);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      borderRadius=\"20px\"\r\n      bg={boxBg}\r\n      h=\"345px\"\r\n      w={{ base: \"315px\", md: \"345px\" }}\r\n      direction=\"column\"\r\n    >\r\n      <Box p=\"20px\">\r\n        <Flex w=\"100%\" mb=\"10px\">\r\n          <Image src=\"https://i.ibb.co/ZWxRPRq/Venus-Logo.png\" me=\"auto\" />\r\n          <Button\r\n            w=\"38px\"\r\n            h=\"38px\"\r\n            align=\"center\"\r\n            justify=\"center\"\r\n            borderRadius=\"12px\"\r\n            me=\"12px\"\r\n            bg={iconBox}\r\n            onClick={handleClick}\r\n            cursor=\"pointer\"\r\n          >\r\n            <Icon\r\n              w=\"24px\"\r\n              h=\"24px\"\r\n              as={IoEllipsisHorizontalSharp}\r\n              color={iconColor}\r\n            />\r\n          </Button>\r\n        </Flex>\r\n        <Box>\r\n          {/* Task Name */}\r\n          <Text fontWeight=\"600\" color={mainText} w=\"100%\" fontSize=\"2xl\">\r\n            Create Dashboard\r\n          </Text>\r\n          {/* Task Type */}\r\n          <Flex alignItems=\"center\">\r\n            <BiLabel size={24} />\r\n            <Text ml={2}>Task Type</Text>\r\n          </Flex>\r\n          {/* Deadline */}\r\n          <Flex alignItems=\"center\" mt={2}>\r\n            <BiCalendar size={24} />\r\n            <Text ml={2}>Up to month</Text>\r\n          </Flex>\r\n          {/* Assigned To */}\r\n          <Box mt={2}>\r\n            <Text>Assigned to</Text>\r\n            <AvatarGroup\r\n              size=\"sm\"\r\n              max={3}\r\n              color={iconColor}\r\n              fontSize=\"9px\"\r\n              fontWeight=\"700\"\r\n            >\r\n              <Avatar src=\"https://i.ibb.co/CmxNdhQ/avatar1.png\" />\r\n              <Avatar src=\"https://i.ibb.co/cFWc59B/avatar2.png\" />\r\n              <Avatar src=\"https://i.ibb.co/vLQJVFy/avatar3.png\" />\r\n              <Avatar src={props.userEntity} />\r\n            </AvatarGroup>\r\n            <Text>{props.userEntity}</Text>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Flex\r\n        bg={secondaryBg}\r\n        w=\"100%\"\r\n        p=\"20px\"\r\n        borderBottomLeftRadius=\"inherit\"\r\n        borderBottomRightRadius=\"inherit\"\r\n        height=\"100%\"\r\n        direction=\"column\"\r\n      >\r\n        <List>\r\n          <ListItem>\r\n            <Flex alignItems=\"start\">\r\n              <BiCalendar size={20} />\r\n              <Text\r\n                fontSize=\"sm\"\r\n                color=\"gray.500\"\r\n                lineHeight=\"24px\"\r\n                pe=\"40px\"\r\n                fontWeight=\"500\"\r\n                mb=\"auto\"\r\n                ml={2}\r\n              >\r\n                You have the\r\n              </Text>\r\n            </Flex>\r\n          </ListItem>\r\n        </List>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport const TaskModal = ({ isOpen, onClose, task }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>{task.name}</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>{/* Add content here for the task modal */}</ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\ActionLog\\ActionLog.js",["544","545"],[],"import React from \"react\";\r\nimport { Box, Td, Tr } from \"@chakra-ui/react\";\r\n\r\n{\r\n  /*\r\n - ActionName\r\n - ActionDescription\r\n - ConductedByUser\r\n - Timestamp\r\n\r\n*/\r\n}\r\n\r\nconst ActionLog = (props) => {\r\n  return (\r\n    <Tr key={props.id}>\r\n      <Td>{props.name}</Td>\r\n      <Td>{props.description}</Td>\r\n      <Td>{props.conductedByUser}</Td>\r\n      <Td>{props.timestamp}</Td>\r\n    </Tr>\r\n  );\r\n};\r\n\r\nexport default ActionLog;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\Publications\\Components\\PublicationFeed.js",["546","547","548","549","550"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, Center, Heading } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport Post from \"../../../Components/Entities/Post/Post\";\r\n\r\nconst PublicationFeed = () => {\r\n  const [publicationData, setPublicationData] = useState([]);\r\n  const blocks = [1, 2, 3, 4, 5, 6];\r\n\r\n  {\r\n    /*useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const posts = await axios.get(\r\n          \"https://localhost:50555/PostController/posts\"\r\n        );\r\n        setPublicationData(posts);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n}, []);*/\r\n  }\r\n  return (\r\n    <>\r\n      <Center>\r\n        <Heading>Publications</Heading>\r\n      </Center>\r\n      <Center>\r\n        <Box mb={8}>\r\n          {blocks.map((publication) => (\r\n            <Post />\r\n          ))}\r\n        </Box>\r\n      </Center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicationFeed;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Components\\Entities\\Post\\Post.js",["551"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Avatar,\r\n  Box,\r\n  Flex,\r\n  IconButton,\r\n  Text,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  HStack,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  Textarea,\r\n  ModalFooter\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { BiLike, BiChat, BiShare } from \"react-icons/bi\";\r\n\r\nconst Post = ({ publication }) => {\r\n  const [isCommentModalOpen, setCommentModalOpen] = useState(false);\r\n\r\n  const handleCommentButtonClick = () => {\r\n    setCommentModalOpen(true);\r\n  };\r\n\r\n  const handleCloseCommentModal = () => {\r\n    setCommentModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card maxW=\"xl\" mt=\"3em\">\r\n      <CardHeader>\r\n        <Flex spacing=\"4\">\r\n          <Flex flex=\"1\" gap=\"4\" alignItems=\"center\" flexWrap=\"wrap\">\r\n            <Avatar name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" />\r\n\r\n            <Box>\r\n              <Heading size=\"sm\">{}</Heading>\r\n              <Text>Creator, Chakra UI</Text>\r\n            </Box>\r\n          </Flex>\r\n          <IconButton\r\n            variant=\"ghost\"\r\n            colorScheme=\"gray\"\r\n            aria-label=\"See menu\"\r\n          />\r\n          {/*\r\n          import { BsThreeDotsVertical } from \"react-bootstrap\";\r\n          icon={<BsThreeDotsVertical />} \r\n          */}\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Text>\r\n          With Chakra UI, I wanted to sync the speed of development with the\r\n          speed of design. I wanted the developer to be just as excited as the\r\n          designer to create a screen.\r\n        </Text>\r\n      </CardBody>\r\n      <Image\r\n        objectFit=\"cover\"\r\n        src=\"https://images.unsplash.com/photo-1531403009284-440f080d1e12?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80\"\r\n        alt=\"Chakra UI\"\r\n      />\r\n\r\n      <CardFooter\r\n        justify=\"space-between\"\r\n        flexWrap=\"wrap\"\r\n        sx={{\r\n          \"& > button\": {\r\n            minW: \"136px\",\r\n          },\r\n        }}\r\n      >\r\n        <Popover>\r\n          <PopoverTrigger>\r\n            <Button flex=\"1\" variant=\"ghost\" leftIcon={<BiLike />}>\r\n              Like\r\n            </Button>\r\n          </PopoverTrigger>\r\n          <PopoverContent p=\"1em\">\r\n            <PopoverArrow />\r\n            <PopoverBody>\r\n              <HStack spacing=\"1em\">\r\n                <Button variant=\"ghost\" leftIcon={<BiLike />} size=\"sm\">\r\n                  Like Option 1\r\n                </Button>\r\n                <Button variant=\"ghost\" leftIcon={<BiLike />} size=\"sm\">\r\n                  Like Option 2\r\n                </Button>\r\n                <Button variant=\"ghost\" leftIcon={<BiLike />} size=\"sm\">\r\n                  Like Option 3\r\n                </Button>\r\n                {/* Add more buttons for different like options */}\r\n              </HStack>\r\n            </PopoverBody>\r\n          </PopoverContent>\r\n        </Popover>\r\n        <Button flex=\"1\" variant=\"ghost\" onClick={handleCommentButtonClick} leftIcon={<BiChat />}>\r\n          Comment\r\n        </Button>\r\n        <Button flex=\"1\" variant=\"ghost\" leftIcon={<BiShare />}>\r\n          Share\r\n        </Button>\r\n      </CardFooter>\r\n\r\n      <Modal isOpen={isCommentModalOpen} onClose={handleCloseCommentModal}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Add a Comment</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Textarea placeholder=\"Write your comment...\" />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3}>\r\n              Post\r\n            </Button>\r\n            <Button variant=\"ghost\" onClick={handleCloseCommentModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\CommandChatPage.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\Components\\CommandChatContent.js",[],[],"C:\\Users\\illia.melnyk\\Documents\\Projects_Development\\advertisement-project-lab\\Frontend\\src\\Pages\\CommandChat\\CommandChat.js",[],[],{"ruleId":"552","severity":1,"message":"553","line":3,"column":20,"nodeType":"554","messageId":"555","endLine":3,"endColumn":26},{"ruleId":"552","severity":1,"message":"556","line":4,"column":3,"nodeType":"554","messageId":"555","endLine":4,"endColumn":9},{"ruleId":"552","severity":1,"message":"557","line":11,"column":8,"nodeType":"554","messageId":"555","endLine":11,"endColumn":13},{"ruleId":"552","severity":1,"message":"558","line":13,"column":10,"nodeType":"554","messageId":"555","endLine":13,"endColumn":18},{"ruleId":"552","severity":1,"message":"559","line":13,"column":20,"nodeType":"554","messageId":"555","endLine":13,"endColumn":29},{"ruleId":"552","severity":1,"message":"560","line":27,"column":8,"nodeType":"554","messageId":"555","endLine":27,"endColumn":18},{"ruleId":"552","severity":1,"message":"561","line":38,"column":8,"nodeType":"554","messageId":"555","endLine":38,"endColumn":29},{"ruleId":"552","severity":1,"message":"562","line":5,"column":8,"nodeType":"554","messageId":"555","endLine":5,"endColumn":22},{"ruleId":"552","severity":1,"message":"563","line":8,"column":8,"nodeType":"554","messageId":"555","endLine":8,"endColumn":24},{"ruleId":"552","severity":1,"message":"564","line":10,"column":8,"nodeType":"554","messageId":"555","endLine":10,"endColumn":17},{"ruleId":"552","severity":1,"message":"565","line":3,"column":3,"nodeType":"554","messageId":"555","endLine":3,"endColumn":7},{"ruleId":"552","severity":1,"message":"566","line":4,"column":3,"nodeType":"554","messageId":"555","endLine":4,"endColumn":13},{"ruleId":"552","severity":1,"message":"567","line":5,"column":3,"nodeType":"554","messageId":"555","endLine":5,"endColumn":11},{"ruleId":"552","severity":1,"message":"568","line":6,"column":3,"nodeType":"554","messageId":"555","endLine":6,"endColumn":11},{"ruleId":"552","severity":1,"message":"569","line":7,"column":3,"nodeType":"554","messageId":"555","endLine":7,"endColumn":17},{"ruleId":"552","severity":1,"message":"570","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":12},{"ruleId":"552","severity":1,"message":"571","line":9,"column":3,"nodeType":"554","messageId":"555","endLine":9,"endColumn":18},{"ruleId":"552","severity":1,"message":"572","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":14},{"ruleId":"552","severity":1,"message":"573","line":11,"column":3,"nodeType":"554","messageId":"555","endLine":11,"endColumn":9},{"ruleId":"552","severity":1,"message":"574","line":202,"column":9,"nodeType":"554","messageId":"555","endLine":202,"endColumn":17},{"ruleId":"552","severity":1,"message":"575","line":3,"column":3,"nodeType":"554","messageId":"555","endLine":3,"endColumn":7},{"ruleId":"552","severity":1,"message":"576","line":4,"column":3,"nodeType":"554","messageId":"555","endLine":4,"endColumn":9},{"ruleId":"552","severity":1,"message":"577","line":6,"column":3,"nodeType":"554","messageId":"555","endLine":6,"endColumn":7},{"ruleId":"552","severity":1,"message":"578","line":7,"column":3,"nodeType":"554","messageId":"555","endLine":7,"endColumn":12},{"ruleId":"552","severity":1,"message":"579","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":13},{"ruleId":"552","severity":1,"message":"580","line":9,"column":3,"nodeType":"554","messageId":"555","endLine":9,"endColumn":15},{"ruleId":"552","severity":1,"message":"581","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":12},{"ruleId":"552","severity":1,"message":"582","line":11,"column":3,"nodeType":"554","messageId":"555","endLine":11,"endColumn":12},{"ruleId":"552","severity":1,"message":"583","line":16,"column":3,"nodeType":"554","messageId":"555","endLine":16,"endColumn":7},{"ruleId":"552","severity":1,"message":"584","line":22,"column":10,"nodeType":"554","messageId":"555","endLine":22,"endColumn":15},{"ruleId":"552","severity":1,"message":"585","line":22,"column":17,"nodeType":"554","messageId":"555","endLine":22,"endColumn":25},{"ruleId":"552","severity":1,"message":"557","line":3,"column":8,"nodeType":"554","messageId":"555","endLine":3,"endColumn":13},{"ruleId":"552","severity":1,"message":"586","line":4,"column":8,"nodeType":"554","messageId":"555","endLine":4,"endColumn":18},{"ruleId":"552","severity":1,"message":"587","line":21,"column":3,"nodeType":"554","messageId":"555","endLine":21,"endColumn":9},{"ruleId":"552","severity":1,"message":"588","line":31,"column":3,"nodeType":"554","messageId":"555","endLine":31,"endColumn":14},{"ruleId":"552","severity":1,"message":"589","line":32,"column":3,"nodeType":"554","messageId":"555","endLine":32,"endColumn":16},{"ruleId":"552","severity":1,"message":"590","line":48,"column":10,"nodeType":"554","messageId":"555","endLine":48,"endColumn":16},{"ruleId":"552","severity":1,"message":"591","line":48,"column":18,"nodeType":"554","messageId":"555","endLine":48,"endColumn":24},{"ruleId":"552","severity":1,"message":"592","line":48,"column":26,"nodeType":"554","messageId":"555","endLine":48,"endColumn":37},{"ruleId":"552","severity":1,"message":"574","line":56,"column":9,"nodeType":"554","messageId":"555","endLine":56,"endColumn":17},{"ruleId":"552","severity":1,"message":"593","line":59,"column":21,"nodeType":"554","messageId":"555","endLine":59,"endColumn":33},{"ruleId":"552","severity":1,"message":"594","line":60,"column":20,"nodeType":"554","messageId":"555","endLine":60,"endColumn":31},{"ruleId":"552","severity":1,"message":"595","line":61,"column":17,"nodeType":"554","messageId":"555","endLine":61,"endColumn":25},{"ruleId":"552","severity":1,"message":"596","line":62,"column":19,"nodeType":"554","messageId":"555","endLine":62,"endColumn":29},{"ruleId":"552","severity":1,"message":"597","line":63,"column":20,"nodeType":"554","messageId":"555","endLine":63,"endColumn":31},{"ruleId":"552","severity":1,"message":"598","line":64,"column":20,"nodeType":"554","messageId":"555","endLine":64,"endColumn":31},{"ruleId":"552","severity":1,"message":"599","line":65,"column":27,"nodeType":"554","messageId":"555","endLine":65,"endColumn":45},{"ruleId":"552","severity":1,"message":"600","line":66,"column":10,"nodeType":"554","messageId":"555","endLine":66,"endColumn":32},{"ruleId":"552","severity":1,"message":"601","line":77,"column":9,"nodeType":"554","messageId":"555","endLine":77,"endColumn":21},{"ruleId":"552","severity":1,"message":"602","line":90,"column":9,"nodeType":"554","messageId":"555","endLine":90,"endColumn":21},{"ruleId":"552","severity":1,"message":"603","line":3,"column":8,"nodeType":"554","messageId":"555","endLine":3,"endColumn":20},{"ruleId":"552","severity":1,"message":"604","line":5,"column":8,"nodeType":"554","messageId":"555","endLine":5,"endColumn":25},{"ruleId":"552","severity":1,"message":"605","line":7,"column":8,"nodeType":"554","messageId":"555","endLine":7,"endColumn":12},{"ruleId":"552","severity":1,"message":"606","line":9,"column":10,"nodeType":"554","messageId":"555","endLine":9,"endColumn":14},{"ruleId":"552","severity":1,"message":"586","line":10,"column":8,"nodeType":"554","messageId":"555","endLine":10,"endColumn":18},{"ruleId":"607","severity":1,"message":"608","line":41,"column":3,"nodeType":"609","messageId":"610","endLine":43,"endColumn":4},{"ruleId":"552","severity":1,"message":"611","line":44,"column":10,"nodeType":"554","messageId":"555","endLine":44,"endColumn":18},{"ruleId":"552","severity":1,"message":"612","line":44,"column":20,"nodeType":"554","messageId":"555","endLine":44,"endColumn":31},{"ruleId":"552","severity":1,"message":"613","line":45,"column":10,"nodeType":"554","messageId":"555","endLine":45,"endColumn":18},{"ruleId":"552","severity":1,"message":"614","line":45,"column":20,"nodeType":"554","messageId":"555","endLine":45,"endColumn":31},{"ruleId":"552","severity":1,"message":"588","line":32,"column":5,"nodeType":"554","messageId":"555","endLine":32,"endColumn":16},{"ruleId":"552","severity":1,"message":"589","line":33,"column":5,"nodeType":"554","messageId":"555","endLine":33,"endColumn":18},{"ruleId":"552","severity":1,"message":"574","line":48,"column":11,"nodeType":"554","messageId":"555","endLine":48,"endColumn":19},{"ruleId":"552","severity":1,"message":"593","line":51,"column":21,"nodeType":"554","messageId":"555","endLine":51,"endColumn":33},{"ruleId":"552","severity":1,"message":"594","line":52,"column":20,"nodeType":"554","messageId":"555","endLine":52,"endColumn":31},{"ruleId":"552","severity":1,"message":"595","line":53,"column":17,"nodeType":"554","messageId":"555","endLine":53,"endColumn":25},{"ruleId":"552","severity":1,"message":"596","line":54,"column":19,"nodeType":"554","messageId":"555","endLine":54,"endColumn":29},{"ruleId":"552","severity":1,"message":"597","line":55,"column":20,"nodeType":"554","messageId":"555","endLine":55,"endColumn":31},{"ruleId":"552","severity":1,"message":"598","line":56,"column":20,"nodeType":"554","messageId":"555","endLine":56,"endColumn":31},{"ruleId":"552","severity":1,"message":"599","line":57,"column":27,"nodeType":"554","messageId":"555","endLine":57,"endColumn":45},{"ruleId":"552","severity":1,"message":"600","line":58,"column":10,"nodeType":"554","messageId":"555","endLine":58,"endColumn":32},{"ruleId":"552","severity":1,"message":"601","line":69,"column":9,"nodeType":"554","messageId":"555","endLine":69,"endColumn":21},{"ruleId":"552","severity":1,"message":"602","line":82,"column":9,"nodeType":"554","messageId":"555","endLine":82,"endColumn":21},{"ruleId":"552","severity":1,"message":"615","line":1,"column":8,"nodeType":"554","messageId":"555","endLine":1,"endColumn":13},{"ruleId":"552","severity":1,"message":"616","line":13,"column":12,"nodeType":"554","messageId":"555","endLine":13,"endColumn":21},{"ruleId":"552","severity":1,"message":"617","line":2,"column":19,"nodeType":"554","messageId":"555","endLine":2,"endColumn":25},{"ruleId":"552","severity":1,"message":"617","line":25,"column":3,"nodeType":"554","messageId":"555","endLine":25,"endColumn":9},{"ruleId":"552","severity":1,"message":"618","line":31,"column":3,"nodeType":"554","messageId":"555","endLine":31,"endColumn":12},{"ruleId":"552","severity":1,"message":"619","line":32,"column":3,"nodeType":"554","messageId":"555","endLine":32,"endColumn":9},{"ruleId":"552","severity":1,"message":"620","line":33,"column":3,"nodeType":"554","messageId":"555","endLine":33,"endColumn":13},{"ruleId":"552","severity":1,"message":"621","line":51,"column":10,"nodeType":"554","messageId":"555","endLine":51,"endColumn":18},{"ruleId":"552","severity":1,"message":"622","line":52,"column":10,"nodeType":"554","messageId":"555","endLine":52,"endColumn":19},{"ruleId":"552","severity":1,"message":"623","line":54,"column":10,"nodeType":"554","messageId":"555","endLine":54,"endColumn":18},{"ruleId":"552","severity":1,"message":"624","line":54,"column":20,"nodeType":"554","messageId":"555","endLine":54,"endColumn":27},{"ruleId":"552","severity":1,"message":"625","line":55,"column":8,"nodeType":"554","messageId":"555","endLine":55,"endColumn":14},{"ruleId":"552","severity":1,"message":"626","line":56,"column":10,"nodeType":"554","messageId":"555","endLine":56,"endColumn":18},{"ruleId":"552","severity":1,"message":"627","line":76,"column":7,"nodeType":"554","messageId":"555","endLine":76,"endColumn":14},{"ruleId":"552","severity":1,"message":"628","line":92,"column":11,"nodeType":"554","messageId":"555","endLine":92,"endColumn":20},{"ruleId":"552","severity":1,"message":"629","line":92,"column":22,"nodeType":"554","messageId":"555","endLine":92,"endColumn":37},{"ruleId":"552","severity":1,"message":"574","line":152,"column":9,"nodeType":"554","messageId":"555","endLine":152,"endColumn":17},{"ruleId":"552","severity":1,"message":"630","line":189,"column":11,"nodeType":"554","messageId":"555","endLine":189,"endColumn":17},{"ruleId":"552","severity":1,"message":"631","line":189,"column":19,"nodeType":"554","messageId":"555","endLine":189,"endColumn":26},{"ruleId":"552","severity":1,"message":"632","line":3,"column":5,"nodeType":"554","messageId":"555","endLine":3,"endColumn":10},{"ruleId":"552","severity":1,"message":"633","line":4,"column":5,"nodeType":"554","messageId":"555","endLine":4,"endColumn":17},{"ruleId":"552","severity":1,"message":"634","line":5,"column":5,"nodeType":"554","messageId":"555","endLine":5,"endColumn":17},{"ruleId":"552","severity":1,"message":"635","line":6,"column":5,"nodeType":"554","messageId":"555","endLine":6,"endColumn":16},{"ruleId":"552","severity":1,"message":"636","line":7,"column":5,"nodeType":"554","messageId":"555","endLine":7,"endColumn":16},{"ruleId":"552","severity":1,"message":"637","line":8,"column":5,"nodeType":"554","messageId":"555","endLine":8,"endColumn":14},{"ruleId":"552","severity":1,"message":"638","line":9,"column":5,"nodeType":"554","messageId":"555","endLine":9,"endColumn":21},{"ruleId":"552","severity":1,"message":"639","line":7,"column":5,"nodeType":"554","messageId":"555","endLine":7,"endColumn":15},{"ruleId":"640","severity":1,"message":"641","line":32,"column":55,"nodeType":"642","messageId":"643","endLine":32,"endColumn":66},{"ruleId":"552","severity":1,"message":"644","line":11,"column":3,"nodeType":"554","messageId":"555","endLine":11,"endColumn":19},{"ruleId":"552","severity":1,"message":"636","line":20,"column":5,"nodeType":"554","messageId":"555","endLine":20,"endColumn":16},{"ruleId":"552","severity":1,"message":"638","line":22,"column":5,"nodeType":"554","messageId":"555","endLine":22,"endColumn":21},{"ruleId":"552","severity":1,"message":"616","line":1,"column":10,"nodeType":"554","messageId":"555","endLine":1,"endColumn":19},{"ruleId":"552","severity":1,"message":"576","line":5,"column":3,"nodeType":"554","messageId":"555","endLine":5,"endColumn":9},{"ruleId":"552","severity":1,"message":"565","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":7},{"ruleId":"552","severity":1,"message":"566","line":9,"column":3,"nodeType":"554","messageId":"555","endLine":9,"endColumn":13},{"ruleId":"552","severity":1,"message":"567","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":11},{"ruleId":"552","severity":1,"message":"568","line":11,"column":3,"nodeType":"554","messageId":"555","endLine":11,"endColumn":11},{"ruleId":"552","severity":1,"message":"572","line":12,"column":3,"nodeType":"554","messageId":"555","endLine":12,"endColumn":14},{"ruleId":"552","severity":1,"message":"645","line":15,"column":3,"nodeType":"554","messageId":"555","endLine":15,"endColumn":8},{"ruleId":"552","severity":1,"message":"617","line":17,"column":3,"nodeType":"554","messageId":"555","endLine":17,"endColumn":9},{"ruleId":"552","severity":1,"message":"627","line":22,"column":7,"nodeType":"554","messageId":"555","endLine":22,"endColumn":14},{"ruleId":"552","severity":1,"message":"630","line":41,"column":11,"nodeType":"554","messageId":"555","endLine":41,"endColumn":17},{"ruleId":"552","severity":1,"message":"646","line":41,"column":19,"nodeType":"554","messageId":"555","endLine":41,"endColumn":25},{"ruleId":"552","severity":1,"message":"631","line":41,"column":27,"nodeType":"554","messageId":"555","endLine":41,"endColumn":34},{"ruleId":"552","severity":1,"message":"647","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":11},{"ruleId":"552","severity":1,"message":"648","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":10},{"ruleId":"552","severity":1,"message":"649","line":20,"column":10,"nodeType":"554","messageId":"555","endLine":20,"endColumn":30},{"ruleId":"552","severity":1,"message":"650","line":4,"column":3,"nodeType":"554","messageId":"555","endLine":4,"endColumn":17},{"ruleId":"552","severity":1,"message":"651","line":6,"column":3,"nodeType":"554","messageId":"555","endLine":6,"endColumn":7},{"ruleId":"552","severity":1,"message":"652","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":10},{"ruleId":"552","severity":1,"message":"653","line":28,"column":3,"nodeType":"554","messageId":"555","endLine":28,"endColumn":11},{"ruleId":"552","severity":1,"message":"654","line":29,"column":3,"nodeType":"554","messageId":"555","endLine":29,"endColumn":9},{"ruleId":"552","severity":1,"message":"573","line":33,"column":3,"nodeType":"554","messageId":"555","endLine":33,"endColumn":9},{"ruleId":"552","severity":1,"message":"655","line":34,"column":3,"nodeType":"554","messageId":"555","endLine":34,"endColumn":16},{"ruleId":"607","severity":1,"message":"608","line":74,"column":3,"nodeType":"609","messageId":"610","endLine":76,"endColumn":4},{"ruleId":"552","severity":1,"message":"656","line":131,"column":9,"nodeType":"554","messageId":"555","endLine":131,"endColumn":21},{"ruleId":"552","severity":1,"message":"657","line":135,"column":9,"nodeType":"554","messageId":"555","endLine":135,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":18,"column":9,"nodeType":"609","messageId":"610","endLine":20,"endColumn":10},{"ruleId":"607","severity":1,"message":"608","line":30,"column":9,"nodeType":"609","messageId":"610","endLine":32,"endColumn":10},{"ruleId":"607","severity":1,"message":"608","line":42,"column":9,"nodeType":"609","messageId":"610","endLine":44,"endColumn":10},{"ruleId":"607","severity":1,"message":"608","line":54,"column":9,"nodeType":"609","messageId":"610","endLine":56,"endColumn":10},{"ruleId":"552","severity":1,"message":"658","line":7,"column":3,"nodeType":"554","messageId":"555","endLine":7,"endColumn":13},{"ruleId":"552","severity":1,"message":"659","line":5,"column":3,"nodeType":"554","messageId":"555","endLine":5,"endColumn":14},{"ruleId":"607","severity":1,"message":"608","line":19,"column":3,"nodeType":"609","messageId":"610","endLine":21,"endColumn":4},{"ruleId":"552","severity":1,"message":"660","line":22,"column":9,"nodeType":"554","messageId":"555","endLine":22,"endColumn":13},{"ruleId":"552","severity":1,"message":"661","line":23,"column":9,"nodeType":"554","messageId":"555","endLine":23,"endColumn":14},{"ruleId":"552","severity":1,"message":"662","line":24,"column":9,"nodeType":"554","messageId":"555","endLine":24,"endColumn":20},{"ruleId":"552","severity":1,"message":"663","line":25,"column":9,"nodeType":"554","messageId":"555","endLine":25,"endColumn":14},{"ruleId":"552","severity":1,"message":"664","line":26,"column":9,"nodeType":"554","messageId":"555","endLine":26,"endColumn":19},{"ruleId":"552","severity":1,"message":"665","line":27,"column":9,"nodeType":"554","messageId":"555","endLine":27,"endColumn":19},{"ruleId":"552","severity":1,"message":"666","line":28,"column":9,"nodeType":"554","messageId":"555","endLine":28,"endColumn":20},{"ruleId":"607","severity":1,"message":"608","line":30,"column":3,"nodeType":"609","messageId":"610","endLine":32,"endColumn":4},{"ruleId":"552","severity":1,"message":"667","line":5,"column":3,"nodeType":"554","messageId":"555","endLine":5,"endColumn":7},{"ruleId":"552","severity":1,"message":"668","line":14,"column":28,"nodeType":"554","messageId":"555","endLine":14,"endColumn":43},{"ruleId":"552","severity":1,"message":"669","line":17,"column":9,"nodeType":"554","messageId":"555","endLine":17,"endColumn":15},{"ruleId":"552","severity":1,"message":"632","line":6,"column":3,"nodeType":"554","messageId":"555","endLine":6,"endColumn":8},{"ruleId":"552","severity":1,"message":"633","line":7,"column":3,"nodeType":"554","messageId":"555","endLine":7,"endColumn":15},{"ruleId":"552","severity":1,"message":"634","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":15},{"ruleId":"552","severity":1,"message":"635","line":9,"column":3,"nodeType":"554","messageId":"555","endLine":9,"endColumn":14},{"ruleId":"552","severity":1,"message":"637","line":10,"column":3,"nodeType":"554","messageId":"555","endLine":10,"endColumn":12},{"ruleId":"552","severity":1,"message":"636","line":11,"column":3,"nodeType":"554","messageId":"555","endLine":11,"endColumn":14},{"ruleId":"552","severity":1,"message":"575","line":13,"column":3,"nodeType":"554","messageId":"555","endLine":13,"endColumn":7},{"ruleId":"552","severity":1,"message":"648","line":14,"column":3,"nodeType":"554","messageId":"555","endLine":14,"endColumn":10},{"ruleId":"552","severity":1,"message":"670","line":20,"column":8,"nodeType":"554","messageId":"555","endLine":20,"endColumn":22},{"ruleId":"552","severity":1,"message":"671","line":23,"column":11,"nodeType":"554","messageId":"555","endLine":23,"endColumn":12},{"ruleId":"552","severity":1,"message":"615","line":1,"column":8,"nodeType":"554","messageId":"555","endLine":1,"endColumn":13},{"ruleId":"552","severity":1,"message":"655","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":23},{"ruleId":"552","severity":1,"message":"672","line":3,"column":8,"nodeType":"554","messageId":"555","endLine":3,"endColumn":25},{"ruleId":"552","severity":1,"message":"647","line":6,"column":3,"nodeType":"554","messageId":"555","endLine":6,"endColumn":11},{"ruleId":"552","severity":1,"message":"648","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":10},{"ruleId":"552","severity":1,"message":"587","line":12,"column":3,"nodeType":"554","messageId":"555","endLine":12,"endColumn":9},{"ruleId":"552","severity":1,"message":"575","line":15,"column":3,"nodeType":"554","messageId":"555","endLine":15,"endColumn":7},{"ruleId":"552","severity":1,"message":"673","line":19,"column":10,"nodeType":"554","messageId":"555","endLine":19,"endColumn":26},{"ruleId":"552","severity":1,"message":"639","line":7,"column":5,"nodeType":"554","messageId":"555","endLine":7,"endColumn":15},{"ruleId":"552","severity":1,"message":"674","line":2,"column":8,"nodeType":"554","messageId":"555","endLine":2,"endColumn":26},{"ruleId":"552","severity":1,"message":"652","line":5,"column":10,"nodeType":"554","messageId":"555","endLine":5,"endColumn":17},{"ruleId":"552","severity":1,"message":"675","line":8,"column":3,"nodeType":"554","messageId":"555","endLine":8,"endColumn":8},{"ruleId":"552","severity":1,"message":"676","line":28,"column":10,"nodeType":"554","messageId":"555","endLine":28,"endColumn":24},{"ruleId":"552","severity":1,"message":"677","line":32,"column":9,"nodeType":"554","messageId":"555","endLine":32,"endColumn":24},{"ruleId":"552","severity":1,"message":"678","line":36,"column":9,"nodeType":"554","messageId":"555","endLine":36,"endColumn":25},{"ruleId":"552","severity":1,"message":"653","line":15,"column":3,"nodeType":"554","messageId":"555","endLine":15,"endColumn":11},{"ruleId":"552","severity":1,"message":"679","line":26,"column":10,"nodeType":"554","messageId":"555","endLine":26,"endColumn":17},{"ruleId":"552","severity":1,"message":"680","line":26,"column":19,"nodeType":"554","messageId":"555","endLine":26,"endColumn":33},{"ruleId":"607","severity":1,"message":"681","line":29,"column":1,"nodeType":"609","messageId":"682","endLine":44,"endColumn":2},{"ruleId":"552","severity":1,"message":"683","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":13},{"ruleId":"607","severity":1,"message":"681","line":4,"column":1,"nodeType":"609","messageId":"682","endLine":12,"endColumn":2},{"ruleId":"552","severity":1,"message":"559","line":1,"column":17,"nodeType":"554","messageId":"555","endLine":1,"endColumn":26},{"ruleId":"552","severity":1,"message":"557","line":3,"column":8,"nodeType":"554","messageId":"555","endLine":3,"endColumn":13},{"ruleId":"552","severity":1,"message":"684","line":7,"column":10,"nodeType":"554","messageId":"555","endLine":7,"endColumn":25},{"ruleId":"552","severity":1,"message":"685","line":7,"column":27,"nodeType":"554","messageId":"555","endLine":7,"endColumn":45},{"ruleId":"607","severity":1,"message":"608","line":10,"column":3,"nodeType":"609","messageId":"610","endLine":23,"endColumn":4},{"ruleId":"552","severity":1,"message":"686","line":19,"column":3,"nodeType":"554","messageId":"555","endLine":19,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'TermsOfUse' is defined but never used.","'ServerUnavailablePage' is defined but never used.","'StartPageIntro' is defined but never used.","'FeedbackCarousel' is defined but never used.","'PriceList' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'MenuItemOption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuDivider' is defined but never used.","'Switch' is defined but never used.","'navigate' is assigned a value but never used.","'Text' is defined but never used.","'Avatar' is defined but never used.","'Stat' is defined but never used.","'StatLabel' is defined but never used.","'StatNumber' is defined but never used.","'StatHelpText' is defined but never used.","'StatArrow' is defined but never used.","'StatGroup' is defined but never used.","'Icon' is defined but never used.","'stats' is assigned a value but never used.","'setStats' is assigned a value but never used.","'PopupError' is defined but never used.","'HStack' is defined but never used.","'OrderedList' is defined but never used.","'UnorderedList' is defined but never used.","'FiBell' is defined but never used.","'FiMoon' is defined but never used.","'FiArrowLeft' is defined but never used.","'setFirstName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'successfulRegistration' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleSignUp' is assigned a value but never used.","'localStorage' is defined but never used.","'loginIllustration' is defined but never used.","'logo' is defined but never used.","'Fade' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'React' is defined but never used.","'ReactNode' is defined but never used.","'Center' is defined but never used.","'FiCompass' is defined but never used.","'FiStar' is defined but never used.","'FiSettings' is defined but never used.","'IconType' is defined but never used.","'ReactText' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'Footer' is defined but never used.","'Navigate' is defined but never used.","'NavLink' is assigned a value but never used.","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'InputProps' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'CircularProgress' is defined but never used.","'Stack' is defined but never used.","'onOpen' is assigned a value but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'FailedAuthentication' is defined but never used.","'ChakraProvider' is defined but never used.","'Flex' is defined but never used.","'Heading' is defined but never used.","'ListIcon' is defined but never used.","'VStack' is defined but never used.","'useDisclosure' is defined but never used.","'handleSearch' is assigned a value but never used.","'filteredItems' is assigned a value but never used.","'CardFooter' is defined but never used.","'AvatarGroup' is defined but never used.","'name' is assigned a value but never used.","'topic' is assigned a value but never used.","'description' is assigned a value but never used.","'price' is assigned a value but never used.","'datePosted' is assigned a value but never used.","'userEntity' is assigned a value but never used.","'channelType' is assigned a value but never used.","'Grid' is defined but never used.","'FiMessageCircle' is defined but never used.","'blocks' is assigned a value but never used.","'translationUKR' is defined but never used.","'t' is assigned a value but never used.","'AdvertisementList' is defined but never used.","'OAuthButtonGroup' is defined but never used.","'PublicationSidebar' is defined but never used.","'Tfoot' is defined but never used.","'selectedAction' is assigned a value but never used.","'handleOpenModal' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'MdTimer' is defined but never used.","'MdVideoLibrary' is defined but never used.","Block is redundant.","redundantBlock","'Box' is defined but never used.","'publicationData' is assigned a value but never used.","'setPublicationData' is assigned a value but never used.","'PopoverCloseButton' is defined but never used."]