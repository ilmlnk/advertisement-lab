{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\illia.melnyk\\\\Documents\\\\Projects_Development\\\\advertisement-project-lab\\\\Frontend\\\\src\\\\Pages\\\\LogIn\\\\Group\\\\PasswordField.js\",\n  _s = $RefreshSig$();\nimport { FormControl, FormLabel, IconButton, Input, InputGroup, InputProps, InputRightElement, useDisclosure, useMergeRefs } from '@chakra-ui/react';\nimport { forwardRef, useRef } from 'react';\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordField = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const {\n    isOpen,\n    onToggle\n  } = useDisclosure();\n  const inputRef = useRef(null);\n  const mergeRef = useMergeRefs(inputRef, ref);\n  const onClickReveal = () => {\n    onToggle();\n    if (inputRef.current) {\n      inputRef.current.focus({\n        preventScroll: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputRightElement, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"link\",\n          \"aria-label\": isOpen ? 'Mask password' : 'Reveal password',\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(HiEyeOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(HiEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 45\n          }, this),\n          onClick: onClickReveal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        ref: mergeRef,\n        name: \"password\",\n        type: isOpen ? 'text' : 'password',\n        autoComplete: \"current-password\",\n        required: true,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}, \"y4C3Qwan9zmlzFaMIdGcqe/ukXk=\", false, function () {\n  return [useDisclosure, useMergeRefs];\n})), \"y4C3Qwan9zmlzFaMIdGcqe/ukXk=\", false, function () {\n  return [useDisclosure, useMergeRefs];\n});\n_c2 = PasswordField;\nPasswordField.displayName = 'PasswordField';\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordField$forwardRef\");\n$RefreshReg$(_c2, \"PasswordField\");","map":{"version":3,"names":["FormControl","FormLabel","IconButton","Input","InputGroup","InputProps","InputRightElement","useDisclosure","useMergeRefs","forwardRef","useRef","HiEye","HiEyeOff","jsxDEV","_jsxDEV","PasswordField","_s","_c","props","ref","isOpen","onToggle","inputRef","mergeRef","onClickReveal","current","focus","preventScroll","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","variant","icon","onClick","id","name","type","autoComplete","required","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/illia.melnyk/Documents/Projects_Development/advertisement-project-lab/Frontend/src/Pages/LogIn/Group/PasswordField.js"],"sourcesContent":["import {\r\n    FormControl,\r\n    FormLabel,\r\n    IconButton,\r\n    Input,\r\n    InputGroup,\r\n    InputProps,\r\n    InputRightElement,\r\n    useDisclosure,\r\n    useMergeRefs,\r\n  } from '@chakra-ui/react'\r\n  import { forwardRef, useRef } from 'react'\r\n  import { HiEye, HiEyeOff } from 'react-icons/hi'\r\n  \r\n  export const PasswordField = forwardRef((props, ref) => {\r\n    const { isOpen, onToggle } = useDisclosure();\r\n    const inputRef = useRef(null);\r\n  \r\n    const mergeRef = useMergeRefs(inputRef, ref)\r\n    const onClickReveal = () => {\r\n      onToggle()\r\n      if (inputRef.current) {\r\n        inputRef.current.focus({ preventScroll: true })\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <FormControl>\r\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n        <InputGroup>\r\n          <InputRightElement>\r\n            <IconButton\r\n              variant=\"link\"\r\n              aria-label={isOpen ? 'Mask password' : 'Reveal password'}\r\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\r\n              onClick={onClickReveal}\r\n            />\r\n          </InputRightElement>\r\n          <Input\r\n            id=\"password\"\r\n            ref={mergeRef}\r\n            name=\"password\"\r\n            type={isOpen ? 'text' : 'password'}\r\n            autoComplete=\"current-password\"\r\n            required\r\n            {...props}\r\n          />\r\n        </InputGroup>\r\n      </FormControl>\r\n    )\r\n  })\r\n  \r\n  PasswordField.displayName = 'PasswordField'"],"mappings":";;AAAA,SACIA,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,iBAAiB,EACjBC,aAAa,EACbC,YAAY,QACP,kBAAkB;AACzB,SAASC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC1C,SAASC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,aAAa,gBAAAC,EAAA,eAAGP,UAAU,CAAAQ,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EACtD,MAAM;IAAEI,MAAM;IAAEC;EAAS,CAAC,GAAGd,aAAa,CAAC,CAAC;EAC5C,MAAMe,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMa,QAAQ,GAAGf,YAAY,CAACc,QAAQ,EAAEH,GAAG,CAAC;EAC5C,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BH,QAAQ,CAAC,CAAC;IACV,IAAIC,QAAQ,CAACG,OAAO,EAAE;MACpBH,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;IACjD;EACF,CAAC;EAED,oBACEb,OAAA,CAACd,WAAW;IAAA4B,QAAA,gBACVd,OAAA,CAACb,SAAS;MAAC4B,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAClDnB,OAAA,CAACV,UAAU;MAAAwB,QAAA,gBACTd,OAAA,CAACR,iBAAiB;QAAAsB,QAAA,eAChBd,OAAA,CAACZ,UAAU;UACTgC,OAAO,EAAC,MAAM;UACd,cAAYd,MAAM,GAAG,eAAe,GAAG,iBAAkB;UACzDe,IAAI,EAAEf,MAAM,gBAAGN,OAAA,CAACF,QAAQ;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGnB,OAAA,CAACH,KAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACxCG,OAAO,EAAEZ;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC,eACpBnB,OAAA,CAACX,KAAK;QACJkC,EAAE,EAAC,UAAU;QACblB,GAAG,EAAEI,QAAS;QACde,IAAI,EAAC,UAAU;QACfC,IAAI,EAAEnB,MAAM,GAAG,MAAM,GAAG,UAAW;QACnCoB,YAAY,EAAC,kBAAkB;QAC/BC,QAAQ;QAAA,GACJvB;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;EAAA,QAnC8B1B,aAAa,EAGzBC,YAAY;AAAA,EAgC9B,CAAC;EAAA,QAnC6BD,aAAa,EAGzBC,YAAY;AAAA,EAgC7B;AAAAkC,GAAA,GApCW3B,aAAa;AAsC1BA,aAAa,CAAC4B,WAAW,GAAG,eAAe;AAAA,IAAA1B,EAAA,EAAAyB,GAAA;AAAAE,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}